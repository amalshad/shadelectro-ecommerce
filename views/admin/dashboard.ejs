<%- include("../../views/partials/admin/header") %>

<!-- Mobile-First Responsive Dashboard -->
<div class="min-h-screen bg-gray-50">
  <!-- Mobile Header -->
  <div class="lg:hidden bg-white border-b border-gray-200 px-4 py-3">
    <div class="flex items-center justify-between">
      <h1 class="text-lg font-bold text-gray-900">Dashboard</h1>
      <button id="generateLedgerBtnMobile" onclick="generateLedger()" 
        class="bg-green-600 text-white px-3 py-2 rounded-lg text-sm flex items-center gap-2">
        <i class="fas fa-book text-sm"></i>
        Ledger
      </button>
    </div>
  </div>

  <div class="p-3 lg:p-8 space-y-4 lg:space-y-6">
    <!-- Welcome Section - Mobile Optimized -->
    <div class="hidden lg:block mb-6 lg:mb-8">
      <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 lg:gap-6">
        <div>
          <h1 class="text-xl lg:text-2xl xl:text-3xl font-bold text-gray-900 mb-2">Welcome back, Admin!ðŸ‘‹</h1>
          <p class="text-gray-600 text-sm lg:text-base">Here's what's happening with your store today</p>
        </div>
        
        <!-- Desktop Period Filter -->
        <div class="flex flex-col sm:flex-row items-stretch sm:items-center space-y-3 sm:space-y-0 sm:space-x-4">
          <div class="flex items-center bg-white rounded-lg border border-gray-200 p-1">
            <button id="dayFilter" class="px-4 py-2 text-sm font-medium rounded-lg transition-all duration-300 text-gray-600 hover:text-primary">
              Daily
            </button>
            <button id="monthFilter" class="px-4 py-2 text-sm font-medium rounded-lg transition-all duration-300 bg-primary text-white">
              Monthly
            </button>
            <button id="yearFilter" class="px-4 py-2 text-sm font-medium rounded-lg transition-all duration-300 text-gray-600 hover:text-primary">
              Yearly
            </button>
          </div>
          
          <button id="generateLedgerBtn" onclick="generateLedger()" 
            class="bg-gradient-to-r from-green-600 to-green-700 text-white px-6 py-2.5 rounded-xl font-bold hover:from-green-700 hover:to-green-800 transition-all duration-300 hover:shadow-lg transform hover:-translate-y-0.5 flex items-center justify-center gap-2">
            <i class="fas fa-book"></i>
            Generate Ledger Book
          </button>
          
          <div class="text-sm text-gray-500 bg-white px-4 py-2 rounded-xl border border-gray-200 text-center">
            <i class="fas fa-calendar mr-2"></i>
            <%= new Date().toLocaleDateString('en-US', { weekday: 'long', year: 'numeric', month: 'long', day: 'numeric' }) %>
          </div>
        </div>
      </div>
    </div>

    <!-- Mobile Period Filter -->
    <div class="lg:hidden bg-white rounded-lg border border-gray-200 p-3 mb-4">
      <div class="flex items-center justify-center bg-gray-100 rounded-lg p-1">
        <button id="dayFilterMobile" class="flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all duration-300 text-gray-600">
          Daily
        </button>
        <button id="monthFilterMobile" class="flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all duration-300 bg-primary text-white">
          Monthly
        </button>
        <button id="yearFilterMobile" class="flex-1 px-3 py-2 text-sm font-medium rounded-md transition-all duration-300 text-gray-600">
          Yearly
        </button>
      </div>
    </div>

    <!-- Stats Cards - Mobile First Grid -->
    <div class="grid grid-cols-2 lg:grid-cols-4 gap-3 lg:gap-6 mb-4 lg:mb-8">
      <!-- Total Revenue Card -->
      <div class="bg-white rounded-lg lg:rounded-2xl p-3 lg:p-6 shadow-sm border border-gray-100">
        <div class="flex flex-col items-center text-center lg:flex-row lg:text-left">
          <div class="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center mb-2 lg:mb-0 lg:mr-4">
            <i class="fas fa-rupee-sign text-white text-sm"></i>
          </div>
          <div class="flex-1">
            <p class="text-xs lg:text-sm text-gray-600 font-medium mb-1">Revenue</p>
            <h3 class="text-sm lg:text-2xl font-bold text-gray-900" id="totalRevenue">â‚¹<%= totalRevenue.toLocaleString('en-IN') %></h3>
            <div class="flex items-center justify-center lg:justify-start <%= revenueGrowth >= 0 ? 'text-green-500' : 'text-red-500' %> text-xs mt-1">
              <i class="fas fa-arrow-<%= revenueGrowth >= 0 ? 'up' : 'down' %> mr-1"></i>
              <%= Math.abs(revenueGrowth) %>%
            </div>
          </div>
        </div>
      </div>

      <!-- Total Orders Card -->
      <div class="bg-white rounded-lg lg:rounded-2xl p-3 lg:p-6 shadow-sm border border-gray-100">
        <div class="flex flex-col items-center text-center lg:flex-row lg:text-left">
          <div class="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-br from-purple-500 to-purple-600 rounded-lg flex items-center justify-center mb-2 lg:mb-0 lg:mr-4">
            <i class="fas fa-shopping-cart text-white text-sm"></i>
          </div>
          <div class="flex-1">
            <p class="text-xs lg:text-sm text-gray-600 font-medium mb-1">Orders</p>
            <h3 class="text-sm lg:text-2xl font-bold text-gray-900" id="totalOrders"><%= totalOrders.toLocaleString('en-IN') %></h3>
            <div class="flex items-center justify-center lg:justify-start <%= orderGrowth >= 0 ? 'text-green-500' : 'text-red-500' %> text-xs mt-1">
              <i class="fas fa-arrow-<%= orderGrowth >= 0 ? 'up' : 'down' %> mr-1"></i>
              <%= Math.abs(orderGrowth) %>%
            </div>
          </div>
        </div>
      </div>

      <!-- Total Products Card -->
      <div class="bg-white rounded-lg lg:rounded-2xl p-3 lg:p-6 shadow-sm border border-gray-100">
        <div class="flex flex-col items-center text-center lg:flex-row lg:text-left">
          <div class="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-br from-green-500 to-green-600 rounded-lg flex items-center justify-center mb-2 lg:mb-0 lg:mr-4">
            <i class="fas fa-box text-white text-sm"></i>
          </div>
          <div class="flex-1">
            <p class="text-xs lg:text-sm text-gray-600 font-medium mb-1">Products</p>
            <h3 class="text-sm lg:text-2xl font-bold text-gray-900" id="totalProducts"><%= totalProducts.toLocaleString('en-IN') %></h3>
            <div class="flex items-center justify-center lg:justify-start text-blue-500 text-xs mt-1">
              <i class="fas fa-arrow-up mr-1"></i>
              Active
            </div>
          </div>
        </div>
      </div>

      <!-- Total Users Card -->
      <div class="bg-white rounded-lg lg:rounded-2xl p-3 lg:p-6 shadow-sm border border-gray-100">
        <div class="flex flex-col items-center text-center lg:flex-row lg:text-left">
          <div class="w-10 h-10 lg:w-12 lg:h-12 bg-gradient-to-br from-indigo-500 to-indigo-600 rounded-lg flex items-center justify-center mb-2 lg:mb-0 lg:mr-4">
            <i class="fas fa-users text-white text-sm"></i>
          </div>
          <div class="flex-1">
            <p class="text-xs lg:text-sm text-gray-600 font-medium mb-1">Users</p>
            <h3 class="text-sm lg:text-2xl font-bold text-gray-900" id="totalUsers"><%= totalUsers.toLocaleString('en-IN') %></h3>
            <div class="flex items-center justify-center lg:justify-start text-green-500 text-xs mt-1">
              <i class="fas fa-arrow-up mr-1"></i>
              Active
            </div>
          </div>
        </div>
      </div>
    </div>

    <!-- Sales Chart Section - Mobile Responsive -->
    <div class="bg-white rounded-lg lg:rounded-2xl p-4 lg:p-6 shadow-sm border border-gray-100 mb-4 lg:mb-8">
      <div class="flex items-center justify-between mb-4">
        <h3 class="text-base lg:text-xl font-bold text-gray-900 flex items-center">
          <i class="fas fa-chart-line text-primary mr-2 text-sm"></i>
          Sales
        </h3>
        <span id="currentPeriod" class="text-xs text-primary font-semibold">Monthly</span>
      </div>
      <div class="h-48 lg:h-80">
        <canvas id="salesChart"></canvas>
      </div>
    </div>

    <!-- Mobile: Single Column Layout -->
    <div class="space-y-4 lg:hidden">
      <!-- Quick Actions - Mobile -->
      <div class="bg-white rounded-lg p-4 shadow-sm border border-gray-100">
        <h3 class="text-base font-semibold text-gray-900 mb-3">Quick Actions</h3>
        <div class="grid grid-cols-2 gap-3">
          <a href="/admin/product" class="flex flex-col items-center p-3 bg-gradient-to-br from-blue-50 to-blue-100 rounded-lg">
            <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg flex items-center justify-center mb-2">
              <i class="fas fa-plus text-white text-sm"></i>
            </div>
            <span class="text-xs font-medium text-gray-700">Add Product</span>
          </a>
          <a href="/admin/users" class="flex flex-col items-center p-3 bg-gradient-to-br from-green-50 to-green-100 rounded-lg">
            <div class="w-10 h-10 bg-gradient-to-br from-green-500 to-green-600 rounded-lg flex items-center justify-center mb-2">
              <i class="fas fa-users text-white text-sm"></i>
            </div>
            <span class="text-xs font-medium text-gray-700">Users</span>
          </a>
          <a href="/admin/orders" class="flex flex-col items-center p-3 bg-gradient-to-br from-purple-50 to-purple-100 rounded-lg">
            <div class="w-10 h-10 bg-gradient-to-br from-purple-500 to-purple-600 rounded-lg flex items-center justify-center mb-2">
              <i class="fas fa-shopping-cart text-white text-sm"></i>
            </div>
            <span class="text-xs font-medium text-gray-700">Orders</span>
          </a>
          <a href="/admin/category" class="flex flex-col items-center p-3 bg-gradient-to-br from-orange-50 to-orange-100 rounded-lg">
            <div class="w-10 h-10 bg-gradient-to-br from-orange-500 to-orange-600 rounded-lg flex items-center justify-center mb-2">
              <i class="fas fa-tags text-white text-sm"></i>
            </div>
            <span class="text-xs font-medium text-gray-700">Categories</span>
          </a>
        </div>
      </div>

      <!-- Recent Orders - Mobile -->
      <div class="bg-white rounded-lg p-4 shadow-sm border border-gray-100">
        <div class="flex items-center justify-between mb-3">
          <h3 class="text-base font-semibold text-gray-900">Recent Orders</h3>
          <a href="/admin/orders" class="text-xs text-primary font-medium">View All</a>
        </div>
        <div class="space-y-3">
          <% if (recentOrders && recentOrders.length > 0) { %>
            <% recentOrders.slice(0, 3).forEach((order, index) => { %>
              <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                <div class="flex items-center space-x-3">
                  <div class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center text-white text-xs font-bold">
                    <%= index + 1 %>
                  </div>
                  <div>
                    <p class="text-sm font-medium text-gray-900">#<%= order._id.toString().slice(-6).toUpperCase() %></p>
                    <p class="text-xs text-gray-500"><%= order.userId?.name || 'Guest' %></p>
                  </div>
                </div>
                <div class="text-right">
                  <p class="text-sm font-bold text-gray-900">â‚¹<%= order.finalAmount.toLocaleString('en-IN') %></p>
                  <% 
                    let statusClass = 'bg-gray-100 text-gray-800';
                    let statusText = order.status || 'Processing';
                    if (statusText.toLowerCase() === 'delivered') {
                      statusClass = 'bg-green-100 text-green-800';
                    } else if (statusText.toLowerCase() === 'shipped') {
                      statusClass = 'bg-blue-100 text-blue-800';
                    } else if (statusText.toLowerCase() === 'processing') {
                      statusClass = 'bg-yellow-100 text-yellow-800';
                    }
                  %>
                  <span class="inline-block px-2 py-1 rounded-full text-xs font-medium <%= statusClass %> mt-1">
                    <%= statusText %>
                  </span>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="text-center py-6 text-gray-500">
              <i class="fas fa-shopping-cart text-2xl mb-2"></i>
              <p class="text-sm">No recent orders</p>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Quick Summary - Mobile -->
      <div class="bg-white rounded-lg p-4 shadow-sm border border-gray-100">
        <h3 class="text-base font-semibold text-gray-900 mb-3">Quick Summary</h3>
        <div class="space-y-3">
          <div class="flex items-center justify-between p-3 bg-blue-50 rounded-lg">
            <div class="flex items-center space-x-3">
              <div class="w-8 h-8 bg-blue-600 rounded-full flex items-center justify-center">
                <i class="fas fa-chart-line text-white text-xs"></i>
              </div>
              <p class="text-sm font-medium text-gray-900">Avg Order</p>
            </div>
            <p class="text-sm font-bold text-gray-900">â‚¹<%= totalOrders > 0 ? Math.round(totalRevenue / totalOrders).toLocaleString('en-IN') : '0' %></p>
          </div>
          <div class="flex items-center justify-between p-3 bg-green-50 rounded-lg">
            <div class="flex items-center space-x-3">
              <div class="w-8 h-8 bg-green-600 rounded-full flex items-center justify-center">
                <i class="fas fa-percentage text-white text-xs"></i>
              </div>
              <p class="text-sm font-medium text-gray-900">Growth</p>
            </div>
            <p class="text-sm font-bold <%= revenueGrowth >= 0 ? 'text-green-600' : 'text-red-600' %>">
              <%= revenueGrowth >= 0 ? '+' : '' %><%= revenueGrowth %>%
            </p>
          </div>
        </div>
      </div>
    </div>

    <!-- Desktop: Two Column Layout -->
    <div class="hidden lg:grid lg:grid-cols-2 gap-8 mb-8">
      <!-- Recent Orders - Desktop -->
      <div class="bg-white rounded-2xl p-6 shadow-sm border border-gray-100">
        <div class="flex items-center justify-between mb-6">
          <h3 class="text-lg font-semibold text-gray-900">Recent Orders</h3>
          <a href="/admin/orders" class="text-sm text-primary hover:text-primary-hover font-medium">
            View All <i class="fas fa-arrow-right ml-1"></i>
          </a>
        </div>
        <div class="space-y-4">
          <% if (recentOrders && recentOrders.length > 0) { %>
            <% recentOrders.forEach((order, index) => { %>
              <div class="flex items-center justify-between p-3 bg-gray-50 rounded-xl hover:bg-gray-100 transition-colors duration-300">
                <div class="flex items-center space-x-3">
                  <div class="w-10 h-10 bg-gradient-to-br from-blue-500 to-blue-600 rounded-full flex items-center justify-center text-white font-semibold text-sm">
                    #<%= index + 1 %>
                  </div>
                  <div>
                    <p class="font-medium text-gray-900">Order #<%= order._id.toString().slice(-6).toUpperCase() %></p>
                    <p class="text-sm text-gray-500"><%= order.userId?.name || 'Guest User' %></p>
                  </div>
                </div>
                <div class="text-right">
                  <p class="font-semibold text-gray-900">â‚¹<%= order.finalAmount.toLocaleString('en-IN') %></p>
                  <% 
                    let statusClass = 'bg-gray-100 text-gray-800';
                    let statusText = order.status || 'Processing';
                    if (statusText.toLowerCase() === 'delivered') {
                      statusClass = 'bg-green-100 text-green-800';
                    } else if (statusText.toLowerCase() === 'shipped') {
                      statusClass = 'bg-blue-100 text-blue-800';
                    } else if (statusText.toLowerCase() === 'processing') {
                      statusClass = 'bg-yellow-100 text-yellow-800';
                    }
                  %>
                  <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium <%= statusClass %>">
                    <%= statusText %>
                  </span>
                </div>
              </div>
            <% }) %>
          <% } else { %>
            <div class="text-center py-8 text-gray-500">
              <i class="fas fa-shopping-cart text-3xl mb-3"></i>
              <p>No recent orders found</p>
            </div>
          <% } %>
        </div>
      </div>

      <!-- Quick Stats Summary - Desktop -->
      <div class="bg-white rounded-2xl p-6 shadow-sm border border-gray-100">
        <h3 class="text-lg font-semibold text-gray-900 mb-6">Quick Summary</h3>
        <div class="space-y-4">
          <div class="flex items-center justify-between p-3 bg-blue-50 rounded-xl">
            <div class="flex items-center space-x-3">
              <div class="w-10 h-10 bg-blue-100 rounded-full flex items-center justify-center">
                <i class="fas fa-chart-line text-blue-600"></i>
              </div>
              <div>
                <p class="font-medium text-gray-900">Average Order Value</p>
                <p class="text-sm text-gray-500">Per transaction</p>
              </div>
            </div>
            <p class="font-semibold text-gray-900">â‚¹<%= totalOrders > 0 ? Math.round(totalRevenue / totalOrders).toLocaleString('en-IN') : '0' %></p>
          </div>
          <div class="flex items-center justify-between p-3 bg-green-50 rounded-xl">
            <div class="flex items-center space-x-3">
              <div class="w-10 h-10 bg-green-100 rounded-full flex items-center justify-center">
                <i class="fas fa-percentage text-green-600"></i>
              </div>
              <div>
                <p class="font-medium text-gray-900">Revenue Growth</p>
                <p class="text-sm text-gray-500">This month</p>
              </div>
            </div>
            <p class="font-semibold <%= revenueGrowth >= 0 ? 'text-green-600' : 'text-red-600' %>">
              <%= revenueGrowth >= 0 ? '+' : '' %><%= revenueGrowth %>%
            </p>
          </div>
          <div class="flex items-center justify-between p-3 bg-purple-50 rounded-xl">
            <div class="flex items-center space-x-3">
              <div class="w-10 h-10 bg-purple-100 rounded-full flex items-center justify-center">
                <i class="fas fa-shopping-bag text-purple-600"></i>
              </div>
              <div>
                <p class="font-medium text-gray-900">Top Products</p>
                <p class="text-sm text-gray-500">Available variations</p>
              </div>
            </div>
            <p class="font-semibold text-gray-900"><%= topProducts.length %></p>
          </div>
        </div>
      </div>
    </div>

    <!-- Desktop Quick Actions -->
    <div class="hidden lg:block bg-white rounded-2xl p-6 shadow-sm border border-gray-100">
      <h3 class="text-lg font-semibold text-gray-900 mb-6">Quick Actions</h3>
      <div class="grid grid-cols-4 gap-4">
        <a href="/admin/product" class="flex flex-col items-center p-4 bg-gradient-to-br from-blue-50 to-blue-100 rounded-xl hover:from-blue-100 hover:to-blue-200 transition-all duration-300 hover:shadow-md group">
          <div class="w-12 h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-xl flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300">
            <i class="fas fa-plus text-white"></i>
          </div>
          <span class="text-sm font-medium text-gray-700">Add Product</span>
        </a>
        <a href="/admin/users" class="flex flex-col items-center p-4 bg-gradient-to-br from-green-50 to-green-100 rounded-xl hover:from-green-100 hover:to-green-200 transition-all duration-300 hover:shadow-md group">
          <div class="w-12 h-12 bg-gradient-to-br from-green-500 to-green-600 rounded-xl flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300">
            <i class="fas fa-users text-white"></i>
          </div>
          <span class="text-sm font-medium text-gray-700">Manage Users</span>
        </a>
        <a href="/admin/orders" class="flex flex-col items-center p-4 bg-gradient-to-br from-purple-50 to-purple-100 rounded-xl hover:from-purple-100 hover:to-purple-200 transition-all duration-300 hover:shadow-md group">
          <div class="w-12 h-12 bg-gradient-to-br from-purple-500 to-purple-600 rounded-xl flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300">
            <i class="fas fa-shopping-cart text-white"></i>
          </div>
          <span class="text-sm font-medium text-gray-700">View Orders</span>
        </a>
        <a href="/admin/category" class="flex flex-col items-center p-4 bg-gradient-to-br from-orange-50 to-orange-100 rounded-xl hover:from-orange-100 hover:to-orange-200 transition-all duration-300 hover:shadow-md group">
          <div class="w-12 h-12 bg-gradient-to-br from-orange-500 to-orange-600 rounded-xl flex items-center justify-center mb-3 group-hover:scale-110 transition-transform duration-300">
            <i class="fas fa-tags text-white"></i>
          </div>
          <span class="text-sm font-medium text-gray-700">Categories</span>
        </a>
      </div>
    </div>
  </div>
</div>

<!-- Ledger Modal - Mobile Responsive -->
<div id="ledgerModal" class="fixed inset-0 bg-black bg-opacity-50 backdrop-blur-sm z-50 hidden flex items-center justify-center p-4">
  <div class="bg-white rounded-lg w-full max-w-md max-h-[90vh] overflow-y-auto">
    <div class="p-4 border-b border-gray-200">
      <div class="flex items-center justify-between">
        <h3 class="text-lg font-bold text-gray-900 flex items-center">
          <i class="fas fa-book text-green-600 mr-2"></i>
          Generate Ledger
        </h3>
        <button onclick="closeLedgerModal()" class="text-gray-400 hover:text-gray-600">
          <i class="fas fa-times text-lg"></i>
        </button>
      </div>
    </div>

    <div class="p-4">
      <div class="space-y-4">
        <div>
          <label class="block text-sm font-semibold text-gray-700 mb-2">Select Period</label>
          <select id="ledgerPeriod" class="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500">
            <option value="monthly">Monthly</option>
            <option value="quarterly">Quarterly</option>
            <option value="yearly">Yearly</option>
            <option value="custom">Custom Range</option>
          </select>
        </div>

        <div id="customDateRange" class="hidden space-y-4">
          <div>
            <label class="block text-sm font-semibold text-gray-700 mb-2">From Date</label>
            <input type="date" id="fromDate" class="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500">
          </div>
          <div>
            <label class="block text-sm font-semibold text-gray-700 mb-2">To Date</label>
            <input type="date" id="toDate" class="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500">
          </div>
        </div>

        <div>
          <label class="block text-sm font-semibold text-gray-700 mb-2">Format</label>
          <select id="ledgerFormat" class="w-full px-3 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-green-500">
            <option value="pdf">PDF</option>
            <option value="excel">Excel</option>
            <option value="csv">CSV</option>
          </select>
        </div>
      </div>

      <div class="flex flex-col gap-3 mt-6">
        <button onclick="downloadLedger()" class="w-full px-4 py-3 bg-green-600 text-white rounded-lg font-semibold">
          <i class="fas fa-download mr-2"></i>Generate & Download
        </button>
        <button onclick="closeLedgerModal()" class="w-full px-4 py-3 border border-gray-300 text-gray-700 rounded-lg font-semibold">
          Cancel
        </button>
      </div>
    </div>
  </div>
</div>

<!-- Toast Notification -->
<div id="toast" class="fixed top-4 right-4 z-50 transform translate-x-full transition-transform duration-300">
  <div class="bg-white rounded-lg shadow-xl border p-3 flex items-center space-x-3 min-w-[250px]">
    <div id="toastIcon" class="flex-shrink-0"></div>
    <p id="toastMessage" class="text-sm font-semibold text-gray-900 flex-1"></p>
    <button id="closeToast" class="text-gray-400 hover:text-gray-600">
      <i class="fas fa-times text-sm"></i>
    </button>
  </div>
</div>

<!-- Chart.js -->
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

<script>
  let salesChart;
  let currentFilter = 'month';
  const initialChartData = <%- JSON.stringify(chartData) %>;

  document.addEventListener('DOMContentLoaded', function() {
    initializeSalesChart();
    setupEventListeners();
  });

  function setupEventListeners() {
    // Desktop filters
    const desktopFilters = ['dayFilter', 'monthFilter', 'yearFilter'];
    desktopFilters.forEach(filterId => {
      const element = document.getElementById(filterId);
      if (element) {
        element.addEventListener('click', () => changePeriod(filterId.replace('Filter', '')));
      }
    });

    // Mobile filters
    const mobileFilters = ['dayFilterMobile', 'monthFilterMobile', 'yearFilterMobile'];
    mobileFilters.forEach(filterId => {
      const element = document.getElementById(filterId);
      if (element) {
        element.addEventListener('click', () => changePeriod(filterId.replace('FilterMobile', '')));
      }
    });

    // Ledger period selector
    const ledgerPeriod = document.getElementById('ledgerPeriod');
    if (ledgerPeriod) {
      ledgerPeriod.addEventListener('change', function() {
        const customRange = document.getElementById('customDateRange');
        if (customRange) {
          if (this.value === 'custom') {
            customRange.classList.remove('hidden');
          } else {
            customRange.classList.add('hidden');
          }
        }
      });
    }

    // Toast close
    const closeToast = document.getElementById('closeToast');
    if (closeToast) {
      closeToast.addEventListener('click', hideToast);
    }
  }

  async function changePeriod(period) {
    // Update desktop buttons
    ['dayFilter', 'monthFilter', 'yearFilter'].forEach(id => {
      const btn = document.getElementById(id);
      if (btn) {
        btn.classList.remove('bg-primary', 'text-white');
        btn.classList.add('text-gray-600');
      }
    });

    // Update mobile buttons
    ['dayFilterMobile', 'monthFilterMobile', 'yearFilterMobile'].forEach(id => {
      const btn = document.getElementById(id);
      if (btn) {
        btn.classList.remove('bg-primary', 'text-white');
        btn.classList.add('text-gray-600');
      }
    });

    // Set active button
    const desktopBtn = document.getElementById(period + 'Filter');
    const mobileBtn = document.getElementById(period + 'FilterMobile');
    
    if (desktopBtn) {
      desktopBtn.classList.add('bg-primary', 'text-white');
      desktopBtn.classList.remove('text-gray-600');
    }
    
    if (mobileBtn) {
      mobileBtn.classList.add('bg-primary', 'text-white');
      mobileBtn.classList.remove('text-gray-600');
    }

    // Update period display
    const currentPeriod = document.getElementById('currentPeriod');
    if (currentPeriod) {
      currentPeriod.textContent = period.charAt(0).toUpperCase() + period.slice(1) + 'ly';
    }
    
    currentFilter = period;
    
    try {
      const response = await fetch(`/admin/chart-data?period=${period}`);
      const data = await response.json();
      
      if (data.success) {
        updateSalesChart(period, data.chartData);
        updateStats(data.stats);
      }
    } catch (error) {
      console.error('Error fetching chart data:', error);
      updateSalesChart(period, initialChartData[period] || []);
    }
  }

  function initializeSalesChart() {
    const ctx = document.getElementById('salesChart');
    if (!ctx) return;
    
    const isMobile = window.innerWidth < 768;
    
    salesChart = new Chart(ctx.getContext('2d'), {
      type: 'line',
      data: {
        labels: getChartLabels('month'),
        datasets: [{
          label: 'Sales (â‚¹)',
          data: initialChartData.monthly || [],
          borderColor: '#8a2be2',
          backgroundColor: 'rgba(138, 43, 226, 0.1)',
          borderWidth: isMobile ? 2 : 3,
          fill: true,
          tension: 0.4,
          pointBackgroundColor: '#8a2be2',
          pointBorderColor: '#fff',
          pointBorderWidth: 2,
          pointRadius: isMobile ? 3 : 6,
          pointHoverRadius: isMobile ? 5 : 8,
        }]
      },
      options: {
        responsive: true,
        maintainAspectRatio: false,
        plugins: {
          legend: {
            display: !isMobile,
            position: 'top',
            labels: {
              usePointStyle: true,
              padding: 20,
              font: { size: isMobile ? 10 : 12 }
            }
          },
          tooltip: {
            backgroundColor: 'rgba(0, 0, 0, 0.8)',
            titleColor: 'white',
            bodyColor: 'white',
            borderColor: '#8a2be2',
            borderWidth: 1,
            titleFont: { size: isMobile ? 10 : 12 },
            bodyFont: { size: isMobile ? 10 : 12 },
            callbacks: {
              label: function(context) {
                return 'Sales: â‚¹' + context.parsed.y.toLocaleString('en-IN');
              }
            }
          }
        },
        scales: {
          y: {
            beginAtZero: true,
            grid: { color: 'rgba(0, 0, 0, 0.1)' },
            ticks: {
              font: { size: isMobile ? 9 : 12 },
              callback: function(value) {
                return isMobile ? 'â‚¹' + (value / 1000) + 'k' : 'â‚¹' + value.toLocaleString('en-IN');
              }
            }
          },
          x: {
            grid: { color: 'rgba(0, 0, 0, 0.1)' },
            ticks: { font: { size: isMobile ? 9 : 12 } }
          }
        }
      }
    });
  }

  function updateSalesChart(period, data) {
    if (salesChart) {
      salesChart.data.labels = getChartLabels(period);
      salesChart.data.datasets[0].data = data;
      salesChart.update('active');
    }
  }

  function getChartLabels(period) {
    switch(period) {
      case 'day':
        return Array.from({length: 31}, (_, i) => `${i + 1}`);
      case 'month':
        return ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];
      case 'year':
        const currentYear = new Date().getFullYear();
        return Array.from({length: 5}, (_, i) => `${currentYear - 4 + i}`);
      default:
        return [];
    }
  }

  function updateStats(stats) {
    if (stats) {
      const elements = {
        totalRevenue: 'â‚¹' + stats.totalRevenue.toLocaleString('en-IN'),
        totalOrders: stats.totalOrders.toLocaleString('en-IN'),
        totalProducts: stats.totalProducts.toLocaleString('en-IN'),
        totalUsers: stats.totalUsers.toLocaleString('en-IN')
      };
      
      Object.entries(elements).forEach(([id, value]) => {
        const element = document.getElementById(id);
        if (element) element.textContent = value;
      });
    }
  }

  function generateLedger() {
    const modal = document.getElementById('ledgerModal');
    if (modal) {
      modal.classList.remove('hidden');
      document.body.style.overflow = 'hidden';
    }
  }

  function closeLedgerModal() {
    const modal = document.getElementById('ledgerModal');
    if (modal) {
      modal.classList.add('hidden');
      document.body.style.overflow = 'auto';
    }
  }

  async function downloadLedger() {
    const period = document.getElementById('ledgerPeriod')?.value;
    const format = document.getElementById('ledgerFormat')?.value;
    const fromDate = document.getElementById('fromDate')?.value;
    const toDate = document.getElementById('toDate')?.value;

    showToast('Generating ledger book...', 'info');

    try {
      const response = await fetch('/admin/generate-ledger', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({
          period,
          format,
          fromDate: period === 'custom' ? fromDate : null,
          toDate: period === 'custom' ? toDate : null
        })
      });

      if (response.ok) {
        const blob = await response.blob();
        const url = window.URL.createObjectURL(blob);
        const a = document.createElement('a');
        a.href = url;
        a.download = `ledger-${period}-${Date.now()}.${format}`;
        document.body.appendChild(a);
        a.click();
        window.URL.revokeObjectURL(url);
        document.body.removeChild(a);
        
        showToast('Ledger downloaded successfully!', 'success');
        closeLedgerModal();
      } else {
        throw new Error('Failed to generate ledger');
      }
    } catch (error) {
      console.error('Error:', error);
      showToast('Failed to generate ledger book.', 'error');
    }
  }

  function showToast(message, type = 'success') {
    const toast = document.getElementById('toast');
    const icon = document.getElementById('toastIcon');
    const messageEl = document.getElementById('toastMessage');

    if (!toast || !icon || !messageEl) return;

    const icons = {
      success: '<div class="w-5 h-5 bg-green-100 rounded-full flex items-center justify-center"><i class="fas fa-check text-green-600 text-xs"></i></div>',
      error: '<div class="w-5 h-5 bg-red-100 rounded-full flex items-center justify-center"><i class="fas fa-exclamation-circle text-red-600 text-xs"></i></div>',
      info: '<div class="w-5 h-5 bg-blue-100 rounded-full flex items-center justify-center"><i class="fas fa-info-circle text-blue-600 text-xs"></i></div>'
    };

    icon.innerHTML = icons[type] || icons.success;
    messageEl.textContent = message;
    
    toast.classList.remove('translate-x-full');
    setTimeout(() => toast.classList.add('translate-x-full'), 4000);
  }

  function hideToast() {
    const toast = document.getElementById('toast');
    if (toast) toast.classList.add('translate-x-full');
  }

  // Close modal on outside click
  document.getElementById('ledgerModal')?.addEventListener('click', function(e) {
    if (e.target === this) closeLedgerModal();
  });
</script>

<style>
  /* Mobile-first responsive styles */
  @media (max-width: 767px) {
    .bg-gray-50 {
      background-color: #f9fafb;
    }
    
    /* Ensure proper mobile viewport */
    body {
      min-width: 320px;
      overflow-x: auto;
    }
    
    /* Mobile card responsiveness */
    .grid-cols-2 > * {
      min-height: 120px;
    }
    
    /* Mobile chart container */
    canvas {
      max-width: 100%;
      height: auto !important;
    }
  }

  /* Smooth transitions */
  * {
    transition-property: color, background-color, border-color, opacity, transform;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }

  /* Custom scrollbar */
  ::-webkit-scrollbar {
    width: 6px;
    height: 6px;
  }
  
  ::-webkit-scrollbar-track {
    background: #f1f1f1;
  }
  
  ::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 3px;
  }
</style>

</body>
</html>
