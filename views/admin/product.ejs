<%- include("../../views/partials/admin/header") %>

<div class="p-4 lg:p-8">
  <!-- Page Header -->
  <div class="mb-6 lg:mb-8">
    <div class="flex flex-col lg:flex-row lg:items-center lg:justify-between gap-4 lg:gap-6">
      <div>
        <h1 class="text-2xl lg:text-3xl font-bold text-gray-900 mb-2">Product Management</h1>
        <p class="text-gray-600 text-sm lg:text-base">Manage your product catalog efficiently</p>
      </div>
      
      <!-- Search and Actions - Responsive with Debouncing -->
      <div class="flex flex-col sm:flex-row items-stretch sm:items-center gap-3 sm:gap-4">
        <!-- Search Bar with Debouncing -->
        <div class="relative flex-1 min-w-0 sm:min-w-64 lg:min-w-80">
          <input 
            type="text" 
            id="productSearch"
            placeholder="Search products..."
            value="<%= typeof search !== 'undefined' ? search : '' %>"
            class="w-full pl-10 lg:pl-12 pr-10 py-2 lg:py-3 border border-gray-300 rounded-xl focus:outline-none focus:border-primary focus:ring-2 focus:ring-primary/20 transition-all duration-300 bg-white text-sm lg:text-base"
          />
          <i class="fas fa-search absolute left-3 lg:left-4 top-1/2 transform -translate-y-1/2 text-gray-400 text-sm"></i>
          <!-- Loading indicator -->
          <div id="searchLoading" class="absolute right-3 top-1/2 transform -translate-y-1/2 hidden">
            <i class="fas fa-spinner fa-spin text-primary text-sm"></i>
          </div>
        </div>
        
        <!-- Add Product Button -->
        <a 
          href="/admin/productAdd" 
          class="bg-gradient-to-r from-primary to-primary-hover text-white px-4 lg:px-6 py-2 lg:py-3 rounded-xl font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center justify-center space-x-1 lg:space-x-2 whitespace-nowrap text-sm lg:text-base"
        >
          <i class="fas fa-plus text-sm"></i>
          <span class="hidden sm:inline">Add Product</span>
          <span class="sm:hidden">Add</span>
        </a>
      </div>
    </div>
  </div>

  <!-- Statistics Cards - Responsive Grid -->
  <div class="grid grid-cols-2 lg:grid-cols-4 gap-3 lg:gap-6 mb-6 lg:mb-8">
    <div class="bg-white rounded-xl lg:rounded-2xl p-3 lg:p-6 card-shadow border border-gray-100 hover:shadow-lg transition-all duration-300">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-xs lg:text-sm font-medium text-gray-600">Total Products</p>
          <p class="text-lg lg:text-2xl font-bold text-blue-600"><%= products.length %></p>
        </div>
        <div class="w-8 h-8 lg:w-12 lg:h-12 bg-gradient-to-br from-blue-500 to-blue-600 rounded-lg lg:rounded-xl flex items-center justify-center">
          <i class="fas fa-box text-white text-xs lg:text-base"></i>
        </div>
      </div>
    </div>
    
    <div class="bg-white rounded-xl lg:rounded-2xl p-3 lg:p-6 card-shadow border border-gray-100 hover:shadow-lg transition-all duration-300">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-xs lg:text-sm font-medium text-gray-600">Active</p>
          <p class="text-lg lg:text-2xl font-bold text-green-600"><%= products.filter(p => !p.isBlocked).length %></p>
        </div>
        <div class="w-8 h-8 lg:w-12 lg:h-12 bg-gradient-to-br from-green-500 to-green-600 rounded-lg lg:rounded-xl flex items-center justify-center">
          <i class="fas fa-check-circle text-white text-xs lg:text-base"></i>
        </div>
      </div>
    </div>
    
    <div class="bg-white rounded-xl lg:rounded-2xl p-3 lg:p-6 card-shadow border border-gray-100 hover:shadow-lg transition-all duration-300">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-xs lg:text-sm font-medium text-gray-600">Blocked</p>
          <p class="text-lg lg:text-2xl font-bold text-red-600"><%= products.filter(p => p.isBlocked).length %></p>
        </div>
        <div class="w-8 h-8 lg:w-12 lg:h-12 bg-gradient-to-br from-red-500 to-red-600 rounded-lg lg:rounded-xl flex items-center justify-center">
          <i class="fas fa-ban text-white text-xs lg:text-base"></i>
        </div>
      </div>
    </div>
    
    <div class="bg-white rounded-xl lg:rounded-2xl p-3 lg:p-6 card-shadow border border-gray-100 hover:shadow-lg transition-all duration-300">
      <div class="flex items-center justify-between">
        <div>
          <p class="text-xs lg:text-sm font-medium text-gray-600">Low Stock</p>
          <p class="text-lg lg:text-2xl font-bold text-orange-600">
            <%= products.filter(p => p.variants.some(v => v.quantity < 10)).length %>
          </p>
        </div>
        <div class="w-8 h-8 lg:w-12 lg:h-12 bg-gradient-to-br from-orange-500 to-orange-600 rounded-lg lg:rounded-xl flex items-center justify-center">
          <i class="fas fa-exclamation-triangle text-white text-xs lg:text-base"></i>
        </div>
      </div>
    </div>
  </div>

  <!-- Mobile Card View (visible on small screens) -->
  <div class="block lg:hidden space-y-4 mb-6">
    <div class="bg-white rounded-xl p-4 border border-gray-100">
      <h3 class="text-lg font-semibold text-gray-900 mb-4 flex items-center">
        <i class="fas fa-box text-primary mr-3"></i>
        Products (<%= products.length %>)
      </h3>
      
      <% if (products.length === 0) { %>
        <div class="text-center py-8">
          <div class="w-16 h-16 bg-gray-100 rounded-full flex items-center justify-center mb-4 mx-auto">
            <i class="fas fa-box text-2xl text-gray-400"></i>
          </div>
          <h3 class="text-lg font-medium text-gray-900 mb-2">No products found</h3>
          <p class="text-gray-500 mb-4">Get started by adding your first product</p>
          <a 
            href="/admin/productAdd"
            class="bg-gradient-to-r from-primary to-primary-hover text-white px-6 py-3 rounded-xl font-medium transition-all duration-300 hover:shadow-lg inline-flex items-center space-x-2"
          >
            <i class="fas fa-plus"></i>
            <span>Add Product</span>
          </a>
        </div>
      <% } else { %>
        <% products.forEach((product, index) => { %>
          <div class="border-b border-gray-100 pb-4 mb-4 last:border-b-0 last:mb-0 <%= product.isBlocked ? 'bg-red-50 border border-red-200 rounded-lg p-3 -m-1' : '' %>">
            <div class="flex items-start space-x-3">
              <div class="flex-shrink-0">
                <% if (product.variants.length > 0 && product.variants[0].productImage && product.variants[0].productImage[0]) { %>
                  <img 
                    src="/uploads/productImages/<%= product.variants[0].productImage[0] %>" 
                    alt="<%= product.productName %>"
                    class="w-14 h-14 object-cover rounded-lg border border-gray-200"
                  />
                <% } else { %>
                  <div class="w-14 h-14 bg-gradient-to-br from-gray-200 to-gray-300 rounded-lg flex items-center justify-center">
                    <i class="fas fa-image text-gray-400"></i>
                  </div>
                <% } %>
              </div>
              
              <div class="flex-1 min-w-0">
                <div class="flex items-start justify-between">
                  <div class="flex-1">
                    <h4 class="text-sm font-semibold text-gray-900 truncate"><%= product.productName %></h4>
                    <p class="text-xs text-gray-500 mt-1 line-clamp-2"><%= product.description.substring(0, 60) %>...</p>
                    
                    <div class="flex items-center space-x-3 mt-2">
                      <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                        <i class="fas fa-tag mr-1"></i>
                        <%= product.category.name %>
                      </span>
                      
                      <% if (product.variants.length > 1) { %>
                        <span class="text-xs text-blue-600">
                          <%= product.variants.length %> variants
                        </span>
                      <% } %>
                    </div>
                  </div>
                  
                  <div class="text-right">
                    <span id="mobile-status-<%= product._id %>" class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium <%= product.isBlocked ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800' %>">
                      <div class="w-1.5 h-1.5 rounded-full mr-1 <%= product.isBlocked ? 'bg-red-500' : 'bg-green-500' %>"></div>
                      <%= product.isBlocked ? 'Blocked' : 'Active' %>
                    </span>
                  </div>
                </div>
                
                <div class="flex items-center justify-between mt-3">
                  <div class="space-y-1">
                    <% if (product.variants.length > 0) { %>
                      <div class="text-sm font-bold text-gray-900">
                        ₹<%= product.variants[0].salesPrice.toLocaleString('en-IN') %>
                      </div>
                      <% if (product.variants[0].regularPrice > product.variants[0].salesPrice) { %>
                        <div class="text-xs text-gray-500 line-through">
                          ₹<%= product.variants[0].regularPrice.toLocaleString('en-IN') %>
                        </div>
                      <% } %>
                      
                      <% const totalStock = product.variants.reduce((sum, v) => sum + v.quantity, 0) %>
                      <div class="text-xs text-gray-600">
                        Stock: <%= totalStock %> units
                        <% if (totalStock < 10 && totalStock >= 1) { %>
                          <span class="text-orange-600 font-medium">⚠ Low</span>
                        <% } else if (totalStock < 1) { %>
                          <span class="text-red-600 font-medium">✗ Out</span>
                        <% } %>
                      </div>
                    <% } %>
                  </div>
                  
                  <div class="flex items-center space-x-2">
                    <a 
                      href="/admin/editProduct/<%= product._id %>"
                      class="bg-gradient-to-r from-blue-500 to-blue-600 text-white px-3 py-1 rounded-lg text-xs font-medium transition-all duration-300 flex items-center space-x-1"
                    >
                      <i class="fas fa-edit"></i>
                      <span>Edit</span>
                    </a>
                    
                    <button 
                      id="mobile-block-btn-<%= product._id %>" 
                      onclick="toggleProductStatus('<%= product._id %>')"
                      class="<%= product.isBlocked ? 'bg-gradient-to-r from-green-500 to-green-600' : 'bg-gradient-to-r from-red-500 to-red-600' %> text-white px-3 py-1 rounded-lg text-xs font-medium transition-all duration-300 flex items-center space-x-1"
                    >
                      <i class="fas <%= product.isBlocked ? 'fa-unlock' : 'fa-ban' %>"></i>
                      <span><%= product.isBlocked ? 'Unblock' : 'Block' %></span>
                    </button>
                  </div>
                </div>
              </div>
            </div>
          </div>
        <% }) %>
      <% } %>
    </div>
  </div>

  <!-- Desktop Table View (hidden on small screens) -->
  <div class="hidden lg:block bg-white rounded-2xl card-shadow border border-gray-100 overflow-hidden">
    <div class="px-6 py-4 border-b border-gray-100 bg-gray-50/50">
      <div class="flex items-center justify-between">
        <h3 class="text-lg font-semibold text-gray-900 flex items-center">
          <i class="fas fa-box text-primary mr-3"></i>
          Products (<%= products.length %>)
        </h3>
      </div>
    </div>

    <div class="overflow-x-auto">
      <table class="min-w-full divide-y divide-gray-200">
        <thead class="bg-gray-50">
          <tr>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Product</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Category</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Price</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Stock</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Status</th>
            <th class="px-6 py-4 text-left text-xs font-semibold text-gray-600 uppercase tracking-wider">Actions</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          <% if (products.length === 0) { %>
            <tr>
              <td colspan="6" class="px-6 py-16 text-center">
                <div class="flex flex-col items-center">
                  <div class="w-20 h-20 bg-gray-100 rounded-full flex items-center justify-center mb-4">
                    <i class="fas fa-box text-3xl text-gray-400"></i>
                  </div>
                  <h3 class="text-lg font-medium text-gray-900 mb-2">No products found</h3>
                  <p class="text-gray-500 mb-4">Get started by adding your first product</p>
                  <a 
                    href="/admin/productAdd"
                    class="bg-gradient-to-r from-primary to-primary-hover text-white px-6 py-3 rounded-xl font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-2"
                  >
                    <i class="fas fa-plus"></i>
                    <span>Add Product</span>
                  </a>
                </div>
              </td>
            </tr>
          <% } else { %>
            <% products.forEach((product, index) => { %>
              <tr id="desktop-row-<%= product._id %>" class="transition-colors hover:bg-gray-50 <%= product.isBlocked ? 'bg-red-50 border-l-4 border-red-500' : '' %>"
                  style="animation-delay: <%= index * 0.1 %>s;">
                
                <!-- Product Info -->
                <td class="px-6 py-4">
                  <div class="flex items-center space-x-4">
                    <div class="flex-shrink-0">
                      <% if (product.variants.length > 0 && product.variants[0].productImage && product.variants[0].productImage[0]) { %>
                        <img 
                          src="/uploads/productImages/<%= product.variants[0].productImage[0] %>" 
                          alt="<%= product.productName %>"
                          class="w-16 h-16 object-cover rounded-xl border border-gray-200"
                        />
                      <% } else { %>
                        <div class="w-16 h-16 bg-gradient-to-br from-gray-200 to-gray-300 rounded-xl flex items-center justify-center">
                          <i class="fas fa-image text-gray-400 text-xl"></i>
                        </div>
                      <% } %>
                    </div>
                    <div>
                      <div class="text-sm font-semibold text-gray-900 mb-1">
                        <%= product.productName %>
                      </div>
                      <div class="text-xs text-gray-500 line-clamp-2">
                        <%= product.description.substring(0, 60) %>...
                      </div>
                      <% if (product.variants.length > 1) { %>
                        <div class="text-xs text-blue-600 mt-1">
                          <%= product.variants.length %> variants
                        </div>
                      <% } %>
                    </div>
                  </div>
                </td>

                <!-- Category -->
                <td class="px-6 py-4">
                  <span class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-blue-100 text-blue-800">
                    <i class="fas fa-tag mr-1"></i>
                    <%= product.category.name %>
                  </span>
                </td>

                <!-- Price -->
                <td class="px-6 py-4">
                  <% if (product.variants.length > 0) { %>
                    <div class="space-y-1">
                      <div class="text-lg font-bold text-gray-900">
                        ₹<%= product.variants[0].salesPrice.toLocaleString('en-IN') %>
                      </div>
                      <% if (product.variants[0].regularPrice > product.variants[0].salesPrice) { %>
                        <div class="text-xs text-gray-500 line-through">
                          ₹<%= product.variants[0].regularPrice.toLocaleString('en-IN') %>
                        </div>
                      <% } %>
                    </div>
                  <% } else { %>
                    <span class="text-gray-400 text-sm">No variants</span>
                  <% } %>
                </td>

                <!-- Stock -->
                <td class="px-6 py-4">
                  <% if (product.variants.length > 0) { %>
                    <% const totalStock = product.variants.reduce((sum, v) => sum + v.quantity, 0) %>
                    <div class="space-y-1">
                      <div class="text-sm font-semibold text-gray-900">
                        <%= totalStock %> units
                      </div>
                      <% if (totalStock < 10 && totalStock >= 1) { %>
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-orange-100 text-orange-800">
                          <i class="fas fa-exclamation-triangle mr-1"></i>
                          Low Stock
                        </span>
                      <% } else if (totalStock < 50 && totalStock > 10) { %>
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-yellow-100 text-yellow-800">
                          <i class="fas fa-exclamation-triangle mr-1"></i>
                          Medium Stock
                        </span>
                      <% } else if (totalStock < 1) { %>
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800">
                          <i class="fas fa-exclamation-triangle mr-1"></i>
                          Out Of Stock
                        </span>
                      <% } else { %>
                        <span class="inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800">
                          <i class="fas fa-check mr-1"></i>
                          In Stock
                        </span>
                      <% } %>
                    </div>
                  <% } else { %>
                    <span class="text-gray-400 text-sm">No stock</span>
                  <% } %>
                </td>

                <!-- Status -->
                <td class="px-6 py-4">
                  <span id="desktop-status-<%= product._id %>" class="inline-flex items-center px-3 py-1 rounded-full text-xs font-medium <%= product.isBlocked ? 'bg-red-100 text-red-800' : 'bg-green-100 text-green-800' %>">
                    <div class="w-2 h-2 rounded-full mr-2 <%= product.isBlocked ? 'bg-red-500' : 'bg-green-500' %>"></div>
                    <%= product.isBlocked ? 'Blocked' : 'Active' %>
                  </span>
                </td>

                <!-- Actions -->
                <td class="px-6 py-4">
                  <div class="flex items-center space-x-2">
                    <a 
                      href="/admin/editProduct/<%= product._id %>"
                      class="bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white px-3 py-2 rounded-lg text-xs font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-1"
                    >
                      <i class="fas fa-edit"></i>
                      <span>Edit</span>
                    </a>
                    
                    <button 
                      id="desktop-block-btn-<%= product._id %>" 
                      onclick="toggleProductStatus('<%= product._id %>')"
                      class="<%= product.isBlocked ? 'bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700' : 'bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700' %> text-white px-3 py-2 rounded-lg text-xs font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-1"
                    >
                      <i class="fas <%= product.isBlocked ? 'fa-unlock' : 'fa-ban' %>"></i>
                      <span><%= product.isBlocked ? 'Unblock' : 'Block' %></span>
                    </button>
                  </div>
                </td>
              </tr>
            <% }) %>
          <% } %>
        </tbody>
      </table>
    </div>
  </div>

  <!-- Enhanced Pagination - Responsive -->
  <% if (totalPages > 1) { %>
    <div class="mt-6 lg:mt-8 flex flex-col sm:flex-row items-center justify-between gap-4">
      <div class="text-xs lg:text-sm text-gray-600 order-2 sm:order-1">
        Showing <%= ((currentPage - 1) * 10) + 1 %> to <%= Math.min(currentPage * 10, products.length) %> of <%= products.length %> products
      </div>
      
      <nav class="flex items-center space-x-1 order-1 sm:order-2">
        <% if (currentPage > 1) { %>
          <a 
            href="?search=<%= search || '' %>&page=<%= currentPage - 1 %>"
            class="px-2 lg:px-4 py-2 text-xs lg:text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-l-lg hover:bg-gray-50 transition-colors duration-300"
          >
            <i class="fas fa-chevron-left mr-1 hidden sm:inline"></i>
            <span class="hidden sm:inline">Previous</span>
            <span class="sm:hidden">Prev</span>
          </a>
        <% } else { %>
          <span class="px-2 lg:px-4 py-2 text-xs lg:text-sm font-medium text-gray-400 bg-gray-100 border border-gray-300 rounded-l-lg cursor-not-allowed">
            <i class="fas fa-chevron-left mr-1 hidden sm:inline"></i>
            <span class="hidden sm:inline">Previous</span>
            <span class="sm:hidden">Prev</span>
          </span>
        <% } %>

        <!-- Show fewer page numbers on mobile -->
        <% 
          const startPage = Math.max(1, currentPage - 1);
          const endPage = Math.min(totalPages, currentPage + 1);
        %>
        <% for (let i = startPage; i <= endPage; i++) { %>
          <a 
            href="?search=<%= search || '' %>&page=<%= i %>"
            class="px-2 lg:px-4 py-2 text-xs lg:text-sm font-medium <%= i === currentPage ? 'text-white bg-gradient-to-r from-primary to-primary-hover border-primary' : 'text-gray-700 bg-white border-gray-300 hover:bg-gray-50' %> border transition-all duration-300"
          >
            <%= i %>
          </a>
        <% } %>

        <% if (currentPage < totalPages) { %>
          <a 
            href="?search=<%= search || '' %>&page=<%= currentPage + 1 %>"
            class="px-2 lg:px-4 py-2 text-xs lg:text-sm font-medium text-gray-700 bg-white border border-gray-300 rounded-r-lg hover:bg-gray-50 transition-colors duration-300"
          >
            <span class="hidden sm:inline">Next</span>
            <span class="sm:hidden">Next</span>
            <i class="fas fa-chevron-right ml-1 hidden sm:inline"></i>
          </a>
        <% } else { %>
          <span class="px-2 lg:px-4 py-2 text-xs lg:text-sm font-medium text-gray-400 bg-gray-100 border border-gray-300 rounded-r-lg cursor-not-allowed">
            <span class="hidden sm:inline">Next</span>
            <span class="sm:hidden">Next</span>
            <i class="fas fa-chevron-right ml-1 hidden sm:inline"></i>
          </span>
        <% } %>
      </nav>
    </div>
  <% } %>
</div>

<!-- ✅ ENHANCED TOAST NOTIFICATION -->
<div id="toast" class="fixed top-24 right-6 z-[10000] max-w-sm opacity-0 transform translate-x-full transition-all duration-300 ease-out pointer-events-none">
  <div class="bg-white rounded-xl shadow-2xl border border-gray-200 overflow-hidden">
    <div class="flex items-start gap-4 p-4">
      <div class="flex-shrink-0">
        <div id="toastIcon" class="w-8 h-8 rounded-full flex items-center justify-center"></div>
      </div>
      <div class="flex-1 min-w-0">
        <p id="toastTitle" class="text-sm font-semibold text-gray-900 mb-1">Status</p>
        <p id="toastMessage" class="text-sm text-gray-600 leading-relaxed">Message content</p>
      </div>
      <button 
        type="button" 
        onclick="hideToast()"
        class="flex-shrink-0 p-1 text-gray-400 hover:text-gray-600 transition-colors rounded-full hover:bg-gray-100"
      >
        <i class="fas fa-times text-xs"></i>
      </button>
    </div>
    <div id="toastProgress" class="h-1 bg-gradient-to-r transition-all duration-[4000ms] ease-linear w-full"></div>
  </div>
</div>

<!-- ✅ CONFIRMATION MODAL -->
<div id="confirmationModal" class="fixed inset-0 bg-black bg-opacity-50 z-[10001] opacity-0 pointer-events-none transition-all duration-300">
  <div class="flex items-center justify-center min-h-screen p-4">
    <div class="bg-white rounded-2xl shadow-2xl border border-gray-200 p-6 w-full max-w-md transform scale-95 opacity-0 transition-all duration-300" id="confirmationContent">
      <div class="text-center">
        <div class="w-12 h-12 mx-auto mb-4 rounded-full bg-yellow-100 flex items-center justify-center">
          <i class="fas fa-question text-yellow-600 text-xl"></i>
        </div>
        <h3 class="text-lg font-semibold text-gray-900 mb-2" id="confirmTitle">Confirm Action</h3>
        <p class="text-gray-600 mb-6" id="confirmMessage">Are you sure you want to proceed?</p>
        <div class="flex space-x-3">
          <button 
            id="confirmCancel"
            class="flex-1 px-4 py-2 bg-gray-100 text-gray-700 rounded-lg font-medium hover:bg-gray-200 transition-colors duration-300"
          >
            Cancel
          </button>
          <button 
            id="confirmOk"
            class="flex-1 px-4 py-2 bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white rounded-lg font-medium transition-colors duration-300"
          >
            Confirm
          </button>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  // **DEBOUNCING IMPLEMENTATION**
  function debounce(func, wait) {
    let timeout;
    return function executedFunction(...args) {
      const later = () => {
        clearTimeout(timeout);
        func(...args);
      };
      clearTimeout(timeout);
      timeout = setTimeout(later, wait);
    };
  }

  // Global variables
  let toastTimeout;
  let confirmCallback = null;

  // Debounced search with loading indicator
  const debouncedProductSearch = debounce(() => {
    hideSearchLoading();
    applyProductSearch();
  }, 500);

  function showSearchLoading() {
    const loadingIndicator = document.getElementById('searchLoading');
    if (loadingIndicator) {
      loadingIndicator.classList.remove('hidden');
    }
  }

  function hideSearchLoading() {
    const loadingIndicator = document.getElementById('searchLoading');
    if (loadingIndicator) {
      loadingIndicator.classList.add('hidden');
    }
  }

  function applyProductSearch() {
    const searchTerm = document.getElementById('productSearch').value;
    
    // Build the URL with search parameters
    const currentUrl = new URL(window.location);
    
    if (searchTerm.trim()) {
      currentUrl.searchParams.set('search', searchTerm);
    } else {
      currentUrl.searchParams.delete('search');
    }
    
    // Reset to page 1 for new searches
    currentUrl.searchParams.set('page', '1');
    
    // Navigate to filtered URL
    window.location.href = currentUrl.toString();
  }

  // ✅ ENHANCED TOAST SYSTEM
  function showToast(title, message, type = 'success') {
    const toast = document.getElementById('toast');
    const toastIcon = document.getElementById('toastIcon');
    const toastTitle = document.getElementById('toastTitle');
    const toastMessage = document.getElementById('toastMessage');
    const toastProgress = document.getElementById('toastProgress');
    
    // Clear existing timeout
    if (toastTimeout) {
      clearTimeout(toastTimeout);
    }
    
    const config = {
      success: {
        icon: '<i class="fas fa-check text-green-600"></i>',
        iconBg: 'bg-green-100',
        progressColor: 'from-green-400 to-green-500'
      },
      error: {
        icon: '<i class="fas fa-times text-red-600"></i>',
        iconBg: 'bg-red-100',
        progressColor: 'from-red-400 to-red-500'
      },
      warning: {
        icon: '<i class="fas fa-exclamation-triangle text-yellow-600"></i>',
        iconBg: 'bg-yellow-100',
        progressColor: 'from-yellow-400 to-yellow-500'
      },
      info: {
        icon: '<i class="fas fa-info text-blue-600"></i>',
        iconBg: 'bg-blue-100',
        progressColor: 'from-blue-400 to-blue-500'
      }
    };
    
    const currentConfig = config[type] || config.success;
    
    toastIcon.className = `w-8 h-8 rounded-full flex items-center justify-center ${currentConfig.iconBg}`;
    toastIcon.innerHTML = currentConfig.icon;
    toastTitle.textContent = title;
    toastMessage.textContent = message;
    toastProgress.className = `h-1 bg-gradient-to-r ${currentConfig.progressColor} transition-all duration-[4000ms] ease-linear w-full`;
    
    // Show toast
    toast.classList.remove('opacity-0', 'translate-x-full', 'pointer-events-none');
    toast.classList.add('opacity-100', 'translate-x-0', 'pointer-events-auto');
    
    // Start progress bar
    setTimeout(() => {
      toastProgress.style.width = '0%';
    }, 100);
    
    // Auto hide after 4 seconds
    toastTimeout = setTimeout(() => {
      hideToast();
    }, 4000);
  }

  function hideToast() {
    const toast = document.getElementById('toast');
    const toastProgress = document.getElementById('toastProgress');
    
    if (toastTimeout) {
      clearTimeout(toastTimeout);
    }
    
    toast.classList.remove('opacity-100', 'translate-x-0', 'pointer-events-auto');
    toast.classList.add('opacity-0', 'translate-x-full', 'pointer-events-none');
    
    // Reset progress
    setTimeout(() => {
      toastProgress.style.width = '100%';
    }, 300);
  }

  // ✅ CONFIRMATION SYSTEM
  function showConfirmation(title, message, onConfirm, type = 'warning') {
    const modal = document.getElementById('confirmationModal');
    const content = document.getElementById('confirmationContent');
    const confirmTitle = document.getElementById('confirmTitle');
    const confirmMessage = document.getElementById('confirmMessage');
    const confirmOk = document.getElementById('confirmOk');
    
    confirmTitle.textContent = title;
    confirmMessage.textContent = message;
    confirmCallback = onConfirm;
    
    // Update button style based on type
    if (type === 'danger') {
      confirmOk.className = 'flex-1 px-4 py-2 bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white rounded-lg font-medium transition-colors duration-300';
    } else {
      confirmOk.className = 'flex-1 px-4 py-2 bg-gradient-to-r from-blue-500 to-blue-600 hover:from-blue-600 hover:to-blue-700 text-white rounded-lg font-medium transition-colors duration-300';
    }
    
    // Show modal
    modal.classList.remove('opacity-0', 'pointer-events-none');
    modal.classList.add('opacity-100', 'pointer-events-auto');
    
    setTimeout(() => {
      content.classList.remove('scale-95', 'opacity-0');
      content.classList.add('scale-100', 'opacity-100');
    }, 10);
    
    document.body.style.overflow = 'hidden';
  }

  function hideConfirmation() {
    const modal = document.getElementById('confirmationModal');
    const content = document.getElementById('confirmationContent');
    
    content.classList.remove('scale-100', 'opacity-100');
    content.classList.add('scale-95', 'opacity-0');
    
    setTimeout(() => {
      modal.classList.remove('opacity-100', 'pointer-events-auto');
      modal.classList.add('opacity-0', 'pointer-events-none');
      document.body.style.overflow = 'auto';
    }, 300);
    
    confirmCallback = null;
  }

  // ✅ UPDATED: Toggle Product Status with Toast
  function toggleProductStatus(productId) {
    showConfirmation(
      'Change Product Status',
      'Do you want to change the product status?',
      () => processStatusChange(productId),
      'danger'
    );
  }

  async function processStatusChange(productId) {
    // Add loading state to both mobile and desktop buttons
    const mobileBtn = document.getElementById(`mobile-block-btn-${productId}`);
    const desktopBtn = document.getElementById(`desktop-block-btn-${productId}`);
    
    let originalMobileContent, originalDesktopContent;
    
    if (mobileBtn) {
      originalMobileContent = mobileBtn.innerHTML;
      mobileBtn.innerHTML = '<i class="fas fa-spinner fa-spin"></i>';
      mobileBtn.disabled = true;
    }
    
    if (desktopBtn) {
      originalDesktopContent = desktopBtn.innerHTML;
      desktopBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-1"></i>Processing...';
      desktopBtn.disabled = true;
    }

    showToast('Processing', 'Updating product status...', 'info');

    try {
      const response = await fetch(`/admin/listProduct/${productId}`, {
        method: 'PATCH',
      });

      if (!response.ok) throw new Error("Failed to toggle status");
      
      const data = await response.json();
      
      if (data.success) {
        // Update desktop elements
        const desktopRow = document.getElementById(`desktop-row-${productId}`);
        const desktopStatusCell = document.getElementById(`desktop-status-${productId}`);
        const mobileStatusCell = document.getElementById(`mobile-status-${productId}`);
        
        if (data.isBlocked) {
          // Update buttons
          if (mobileBtn) {
            mobileBtn.innerHTML = '<i class="fas fa-unlock"></i><span>Unblock</span>';
            mobileBtn.className = 'bg-gradient-to-r from-green-500 to-green-600 text-white px-3 py-1 rounded-lg text-xs font-medium transition-all duration-300 flex items-center space-x-1';
          }
          if (desktopBtn) {
            desktopBtn.innerHTML = '<i class="fas fa-unlock"></i><span>Unblock</span>';
            desktopBtn.className = 'bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white px-3 py-2 rounded-lg text-xs font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-1';
          }
          
          // Update desktop row and status
          if (desktopRow) {
            desktopRow.classList.add('bg-red-50', 'border-l-4', 'border-red-500');
          }
          if (desktopStatusCell) {
            desktopStatusCell.innerHTML = '<div class="w-2 h-2 rounded-full mr-2 bg-red-500"></div>Blocked';
            desktopStatusCell.className = 'inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800';
          }
          if (mobileStatusCell) {
            mobileStatusCell.innerHTML = '<div class="w-1.5 h-1.5 rounded-full mr-1 bg-red-500"></div>Blocked';
            mobileStatusCell.className = 'inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-red-100 text-red-800';
          }
          
          showToast('Product Blocked', 'Product has been blocked successfully.', 'success');
        } else {
          // Update buttons
          if (mobileBtn) {
            mobileBtn.innerHTML = '<i class="fas fa-ban"></i><span>Block</span>';
            mobileBtn.className = 'bg-gradient-to-r from-red-500 to-red-600 text-white px-3 py-1 rounded-lg text-xs font-medium transition-all duration-300 flex items-center space-x-1';
          }
          if (desktopBtn) {
            desktopBtn.innerHTML = '<i class="fas fa-ban"></i><span>Block</span>';
            desktopBtn.className = 'bg-gradient-to-r from-red-500 to-red-600 hover:from-red-600 hover:to-red-700 text-white px-3 py-2 rounded-lg text-xs font-medium transition-all duration-300 hover:shadow-lg hover:-translate-y-0.5 flex items-center space-x-1';
          }
          
          // Update desktop row and status
          if (desktopRow) {
            desktopRow.classList.remove('bg-red-50', 'border-l-4', 'border-red-500');
          }
          if (desktopStatusCell) {
            desktopStatusCell.innerHTML = '<div class="w-2 h-2 rounded-full mr-2 bg-green-500"></div>Active';
            desktopStatusCell.className = 'inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800';
          }
          if (mobileStatusCell) {
            mobileStatusCell.innerHTML = '<div class="w-1.5 h-1.5 rounded-full mr-1 bg-green-500"></div>Active';
            mobileStatusCell.className = 'inline-flex items-center px-2 py-1 rounded-full text-xs font-medium bg-green-100 text-green-800';
          }
          
          showToast('Product Activated', 'Product has been activated successfully.', 'success');
        }
        
        // Enable buttons
        if (mobileBtn) mobileBtn.disabled = false;
        if (desktopBtn) desktopBtn.disabled = false;
      }
    } catch (error) {
      console.error(error);
      
      // Reset buttons on error
      if (mobileBtn && originalMobileContent) {
        mobileBtn.innerHTML = originalMobileContent;
        mobileBtn.disabled = false;
      }
      if (desktopBtn && originalDesktopContent) {
        desktopBtn.innerHTML = originalDesktopContent;
        desktopBtn.disabled = false;
      }
      
      showToast('Update Failed', 'Something went wrong while updating status.', 'error');
    }
  }

  // Initialize page
  document.addEventListener('DOMContentLoaded', function() {
    const searchInput = document.getElementById('productSearch');
    
    if (searchInput) {
      searchInput.addEventListener('input', (e) => {
        const query = e.target.value;
        
        // Show loading indicator
        if (query.length > 0) {
          showSearchLoading();
        } else {
          hideSearchLoading();
        }
        
        // Trigger debounced search
        debouncedProductSearch();
      });
    }

    // Animate table rows on load
    const rows = document.querySelectorAll('tbody tr');
    rows.forEach((row, index) => {
      row.style.opacity = '0';
      row.style.transform = 'translateY(20px)';
      setTimeout(() => {
        row.style.opacity = '1';
        row.style.transform = 'translateY(0)';
        row.style.transition = 'all 0.3s ease';
      }, index * 100);
    });

    // Add smooth scrolling
    document.documentElement.style.scrollBehavior = 'smooth';

    // Responsive placeholder
    function updatePlaceholder() {
      if (searchInput) {
        if (window.innerWidth < 640) {
          searchInput.placeholder = 'Search products...';
        } else if (window.innerWidth < 1024) {
          searchInput.placeholder = 'Search products...';
        } else {
          searchInput.placeholder = 'Search products by name, category...';
        }
      }
    }
    
    updatePlaceholder();
    window.addEventListener('resize', updatePlaceholder);

    // Confirmation event listeners
    document.getElementById('confirmOk').addEventListener('click', () => {
      if (confirmCallback) {
        confirmCallback();
      }
      hideConfirmation();
    });

    document.getElementById('confirmCancel').addEventListener('click', hideConfirmation);

    // Close confirmation when clicking outside
    document.getElementById('confirmationModal').addEventListener('click', (e) => {
      if (e.target.id === 'confirmationModal') {
        hideConfirmation();
      }
    });

    // Keyboard support
    document.addEventListener('keydown', (e) => {
      if (e.key === 'Escape') {
        if (!document.getElementById('confirmationModal').classList.contains('pointer-events-none')) {
          hideConfirmation();
        }
      }
    });
  });

  // Add loading states for edit links
  document.querySelectorAll('a[href*="/admin/editProduct/"]').forEach(link => {
    link.addEventListener('click', function(e) {
      const btn = this;
      const originalContent = btn.innerHTML;
      btn.innerHTML = '<i class="fas fa-spinner fa-spin mr-1"></i>Loading...';
      btn.style.pointerEvents = 'none';
      
      // Reset after a short delay if navigation fails
      setTimeout(() => {
        btn.innerHTML = originalContent;
        btn.style.pointerEvents = 'auto';
      }, 3000);
    });
  });
</script>

<style>
  /* Custom scrollbar for better aesthetics */
  ::-webkit-scrollbar {
    width: 8px;
  }
  
  ::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 4px;
  }
  
  ::-webkit-scrollbar-thumb {
    background: #c1c1c1;
    border-radius: 4px;
  }
  
  ::-webkit-scrollbar-thumb:hover {
    background: #a8a8a8;
  }

  /* Ensure smooth transitions */
  * {
    transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
    transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
    transition-duration: 150ms;
  }

  /* Card shadow utility */
  .card-shadow {
    box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
  }

  /* Line clamp utility */
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Smooth scroll behavior */
  html {
    scroll-behavior: smooth;
  }

  /* Enhanced toast styling */
  #toast {
    z-index: 10000;
  }

  #confirmationModal {
    z-index: 10001;
  }

  /* Mobile optimizations */
  @media (max-width: 1024px) {
    .min-w-0 {
      min-width: 0;
    }
    
    .sm\:min-w-64 {
      min-width: 16rem;
    }
    
    .lg\:min-w-80 {
      min-width: 20rem;
    }
  }

  /* Animation improvements */
  .transition-all {
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
  }

  /* Button hover effects */
  button:hover {
    transform: translateY(-1px);
  }

  /* Loading animation */
  @keyframes spin {
    to { transform: rotate(360deg); }
  }

  .fa-spin {
    animation: spin 1s linear infinite;
  }
</style>
</html>
