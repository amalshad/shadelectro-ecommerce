<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Manage Addresses | ShadElectro</title>
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap"
    rel="stylesheet">
  <link rel="stylesheet" href="/css/user-profile.css">
  <script src="https://cdn.tailwindcss.com"></script>
  <script>
    tailwind.config = {
      theme: {
        extend: {
          colors: {
            primary: {
              50: '#f3e8ff',
              100: '#e9d5ff',
              200: '#d8b4fe',
              300: '#c084fc',
              400: '#a855f7',
              500: '#8a2be2',
              600: '#7a1dd2',
              700: '#6b1bb8',
              800: '#581c87',
              900: '#4c1d95',
              950: '#2e1065'
            },
            success: {
              50: '#f0fdf4',
              500: '#22c55e',
              600: '#16a34a'
            },
            warning: {
              50: '#fffbeb',
              500: '#f59e0b',
              600: '#d97706'
            }
          },
          fontFamily: {
            'inter': ['Inter', 'sans-serif']
          },
          boxShadow: {
            'card': '0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06)',
            'card-hover': '0 20px 25px -5px rgba(0, 0, 0, 0.1), 0 10px 10px -5px rgba(0, 0, 0, 0.04)',
            'inner-glow': 'inset 0 2px 4px 0 rgba(138, 43, 226, 0.06)'
          },
          animation: {
            'fade-in': 'fadeIn 0.6s ease-out forwards',
            'slide-up': 'slideUp 0.6s ease-out forwards',
            'bounce-in': 'bounceIn 0.8s ease-out forwards',
            'pulse-glow': 'pulseGlow 2s ease-in-out infinite',
            'float': 'float 3s ease-in-out infinite'
          },
          keyframes: {
            fadeIn: {
              '0%': { opacity: '0', transform: 'translateY(10px)' },
              '100%': { opacity: '1', transform: 'translateY(0)' }
            },
            slideUp: {
              '0%': { opacity: '0', transform: 'translateY(30px)' },
              '100%': { opacity: '1', transform: 'translateY(0)' }
            },
            bounceIn: {
              '0%': { opacity: '0', transform: 'scale(0.3)' },
              '50%': { opacity: '1', transform: 'scale(1.05)' },
              '70%': { transform: 'scale(0.9)' },
              '100%': { opacity: '1', transform: 'scale(1)' }
            },
            pulseGlow: {
              '0%, 100%': { boxShadow: '0 0 5px rgba(138, 43, 226, 0.5)' },
              '50%': { boxShadow: '0 0 20px rgba(138, 43, 226, 0.8)' }
            },
            float: {
              '0%, 100%': { transform: 'translateY(0px)' },
              '50%': { transform: 'translateY(-5px)' }
            }
          }
        }
      }
    }
  </script>
  <style>
    .address-content {
      padding: 2rem;
      min-height: 600px;
      background: linear-gradient(135deg, #f8fafc 0%, #f1f5f9 100%);
    }

    .address-card {
      background: linear-gradient(145deg, #ffffff 0%, #f8fafc 100%);
      border: 1px solid rgba(226, 232, 240, 0.8);
      border-radius: 16px;
      padding: 1.5rem;
      transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
      position: relative;
      overflow: hidden;
    }

    .address-card::before {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      right: 0;
      height: 4px;
      background: linear-gradient(90deg, #8a2be2, #a855f7, #c084fc);
      opacity: 0;
      transition: opacity 0.3s ease;
    }

    .address-card:hover::before {
      opacity: 1;
    }

    .address-card:hover {
      transform: translateY(-8px);
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
      border-color: rgba(138, 43, 226, 0.2);
    }

    .address-card.default-address {
      border-color: #22c55e;
      box-shadow: 0 0 0 1px rgba(34, 197, 94, 0.1);
    }

    .address-card.default-address::before {
      background: linear-gradient(90deg, #22c55e, #16a34a);
      opacity: 1;
    }

    .address-type-icon {
      width: 48px;
      height: 48px;
      border-radius: 12px;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 20px;
      margin-bottom: 1rem;
      position: relative;
    }

    .address-type-home {
      background: linear-gradient(135deg, #fef3c7, #fbbf24);
      color: #92400e;
    }

    .address-type-office {
      background: linear-gradient(135deg, #dbeafe, #3b82f6);
      color: #1e40af;
    }

    .address-type-other {
      background: linear-gradient(135deg, #f3e8ff, #8b5cf6);
      color: #6b21a8;
    }

    .default-badge {
      background: linear-gradient(135deg, #22c55e, #16a34a);
      color: white;
      padding: 0.25rem 0.75rem;
      border-radius: 20px;
      font-size: 0.75rem;
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      gap: 0.25rem;
      animation: pulse-glow 2s ease-in-out infinite;
    }

    .billing-badge {
      background: linear-gradient(135deg, #f59e0b, #d97706);
      color: white;
      padding: 0.25rem 0.75rem;
      border-radius: 20px;
      font-size: 0.75rem;
      font-weight: 600;
      display: inline-flex;
      align-items: center;
      gap: 0.25rem;
    }

    .address-info-item {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      padding: 0.5rem 0;
      border-bottom: 1px solid rgba(226, 232, 240, 0.5);
    }

    .address-info-item:last-child {
      border-bottom: none;
    }

    .address-info-icon {
      width: 32px;
      height: 32px;
      border-radius: 8px;
      display: flex;
      align-items: center;
      justify-content: center;
      background: rgba(138, 43, 226, 0.1);
      color: #8a2be2;
      font-size: 14px;
    }

    .empty-state {
      text-align: center;
      padding: 4rem 2rem;
      background: white;
      border-radius: 20px;
      border: 2px dashed #e2e8f0;
      animation: float 3s ease-in-out infinite;
    }

    .empty-state-icon {
      width: 80px;
      height: 80px;
      margin: 0 auto 1.5rem;
      background: linear-gradient(135deg, #f3e8ff, #e9d5ff);
      border-radius: 50%;
      display: flex;
      align-items: center;
      justify-content: center;
      font-size: 2rem;
      color: #8a2be2;
    }

    .action-button {
      padding: 0.5rem 1rem;
      border-radius: 10px;
      font-weight: 500;
      transition: all 0.2s ease;
      display: inline-flex;
      align-items: center;
      gap: 0.5rem;
      font-size: 0.875rem;
    }

    .action-button-primary {
      background: linear-gradient(135deg, #8a2be2, #a855f7);
      color: white;
      border: none;
    }

    .action-button-primary:hover {
      background: linear-gradient(135deg, #7a1dd2, #9333ea);
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(138, 43, 226, 0.4);
    }

    .action-button-outline {
      background: white;
      color: #6b7280;
      border: 1px solid #e5e7eb;
    }

    .action-button-outline:hover {
      background: #f9fafb;
      border-color: #8a2be2;
      color: #8a2be2;
    }

    .action-button-danger {
      background: linear-gradient(135deg, #ef4444, #dc2626);
      color: white;
      border: none;
    }

    .action-button-danger:hover {
      background: linear-gradient(135deg, #dc2626, #b91c1c);
      transform: translateY(-1px);
      box-shadow: 0 4px 12px rgba(239, 68, 68, 0.4);
    }

    .addresses-grid {
      display: grid;
      grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
      gap: 1.5rem;
      margin-top: 2rem;
    }

    .modal-overlay {
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background: rgba(0, 0, 0, 0.6);
      backdrop-filter: blur(4px);
      display: flex;
      align-items: center;
      justify-content: center;
      z-index: 1000;
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s ease;
      padding: 20px;
    }

    .modal-overlay.active {
      opacity: 1;
      visibility: visible;
    }

    .modal-content {
      background: white;
      border-radius: 20px;
      max-width: 600px;
      width: 100%;
      max-height: 90vh;
      overflow-y: auto;
      transform: scale(0.9);
      transition: transform 0.3s ease;
      box-shadow: 0 25px 50px rgba(0, 0, 0, 0.25);
    }

    .modal-overlay.active .modal-content {
      transform: scale(1);
    }

    /* =============== RESPONSIVE CSS ADDITIONS =============== */

    /* Tablet responsive (768px and below) */
    @media (max-width: 768px) {
      .profile-layout {
        display: block;
      }

      .sidebar {
        margin-bottom: 30px;
      }

      .profile-content {
        margin-left: 0;
        padding: 0;
      }

      .address-content {
        padding: 1rem;
        min-height: auto;
      }

      .addresses-grid {
        grid-template-columns: 1fr;
        gap: 1rem;
        margin-top: 1.5rem;
      }

      .address-card {
        padding: 1rem;
        border-radius: 12px;
      }

      .address-card:hover {
        transform: translateY(-4px);
      }

      .address-type-icon {
        width: 40px;
        height: 40px;
        font-size: 18px;
        margin-bottom: 0.75rem;
      }

      .content-header {
        flex-direction: column;
        align-items: flex-start !important;
        gap: 1rem;
        margin-bottom: 1.5rem;
      }

      .content-header h1 {
        font-size: 2rem !important;
        margin-bottom: 0;
      }

      .content-header button {
        width: 100%;
        justify-content: center;
        padding: 0.75rem 1rem;
      }

      .empty-state {
        padding: 2rem 1rem;
      }

      .empty-state-icon {
        width: 60px;
        height: 60px;
        font-size: 1.5rem;
        margin-bottom: 1rem;
      }

      .empty-state h3 {
        font-size: 1.5rem !important;
      }

      .breadcrumb {
        font-size: 13px;
        margin-bottom: 20px;
        flex-wrap: wrap;
      }

      /* Address card actions */
      .address-card .flex.gap-2 {
        flex-direction: column;
        gap: 0.5rem;
      }

      .action-button.flex-1 {
        width: 100%;
      }

      .action-button:not(.flex-1) {
        width: 100%;
        justify-content: center;
      }

      /* Address menu positioning */
      .address-card .relative [id^="addressMenu-"] {
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        width: 90%;
        max-width: 300px;
        border-radius: 15px;
        box-shadow: 0 20px 40px rgba(0, 0, 0, 0.2);
        padding: 1rem 0;
      }
    }

    /* Mobile responsive (480px and below) */
    @media (max-width: 480px) {
      .profile-container {
        padding: 10px;
      }

      .breadcrumb {
        font-size: 12px;
        margin-bottom: 15px;
      }

      .breadcrumb .breadcrumb-link span {
        display: none;
      }

      .address-content {
        padding: 0.75rem;
      }

      .content-header h1 {
        font-size: 1.5rem !important;
        flex-direction: column;
        align-items: flex-start;
        gap: 0.5rem;
      }

      .addresses-grid {
        gap: 0.75rem;
        margin-top: 1rem;
      }

      .address-card {
        padding: 0.75rem;
        border-radius: 10px;
      }

      .address-type-icon {
        width: 36px;
        height: 36px;
        font-size: 16px;
        margin-bottom: 0.5rem;
      }

      .address-info-item {
        padding: 0.375rem 0;
        gap: 0.5rem;
      }

      .address-info-icon {
        width: 28px;
        height: 28px;
        font-size: 12px;
      }

      .default-badge,
      .billing-badge {
        font-size: 0.7rem;
        padding: 0.2rem 0.6rem;
      }

      .action-button {
        padding: 0.5rem 0.75rem;
        font-size: 0.8rem;
        border-radius: 8px;
      }

      .empty-state {
        padding: 1.5rem 0.75rem;
      }

      .empty-state-icon {
        width: 50px;
        height: 50px;
        font-size: 1.2rem;
      }

      .empty-state h3 {
        font-size: 1.25rem !important;
        margin-bottom: 0.5rem;
      }

      .empty-state p {
        font-size: 0.9rem;
        margin-bottom: 1rem;
      }

      /* Modal adjustments for mobile */
      .modal-overlay {
        padding: 10px;
        align-items: flex-end;
      }

      .modal-content {
        max-width: none;
        width: 100%;
        max-height: 85vh;
        border-radius: 15px 15px 0 0;
      }

      .modal-content .p-6 {
        padding: 1rem !important;
      }

      .modal-content h3 {
        font-size: 1.1rem !important;
      }

      .modal-content .grid.md\\:grid-cols-2 {
        grid-template-columns: 1fr !important;
        gap: 1rem;
      }

      .modal-content input,
      .modal-content select {
        padding: 0.75rem !important;
        font-size: 16px !important; /* Prevents iOS zoom */
      }

      .modal-content .flex.justify-end {
        flex-direction: column;
        gap: 0.5rem;
      }

      .modal-content .action-button {
        width: 100%;
        justify-content: center;
        min-height: 44px;
      }

      /* Toast adjustments */
      .toast {
        position: fixed !important;
        top: 10px !important;
        right: 10px !important;
        left: 10px !important;
        transform: translateX(0) !important;
        min-width: auto !important;
      }

      .toast.translate-x-full {
        transform: translateY(-100px) !important;
      }
    }

    /* Very small screens (320px and below) */
    @media (max-width: 320px) {
      .profile-container {
        padding: 8px;
      }

      .address-content {
        padding: 0.5rem;
      }

      .content-header h1 {
        font-size: 1.25rem !important;
      }

      .address-card {
        padding: 0.5rem;
      }

      .address-type-icon {
        width: 32px;
        height: 32px;
        font-size: 14px;
      }

      .action-button {
        padding: 0.4rem 0.6rem;
        font-size: 0.75rem;
      }

      .modal-content .p-6 {
        padding: 0.75rem !important;
      }
    }

    /* Large screens (1200px and up) */
    @media (min-width: 1200px) {
      .address-content {
        padding: 3rem;
      }

      .addresses-grid {
        grid-template-columns: repeat(auto-fill, minmax(400px, 1fr));
        gap: 2rem;
      }

      .address-card {
        padding: 2rem;
      }

      .modal-content {
        max-width: 700px;
      }
    }

    /* Landscape orientation adjustments */
    @media (max-height: 600px) and (orientation: landscape) {
      .modal-overlay {
        align-items: center;
      }

      .modal-content {
        max-height: 95vh;
        border-radius: 15px;
      }

      .empty-state {
        padding: 2rem 1rem;
      }

      .address-content {
        min-height: auto;
      }
    }

    /* Print styles */
    @media print {
      .breadcrumb,
      .sidebar,
      .content-header button,
      .action-button,
      .modal-overlay,
      [id^="addressMenu-"] {
        display: none !important;
      }

      .profile-layout {
        display: block;
      }

      .profile-content {
        margin-left: 0;
      }

      .address-content {
        background: white;
        padding: 1rem;
      }

      .addresses-grid {
        grid-template-columns: repeat(2, 1fr);
        gap: 1rem;
      }

      .address-card {
        border: 1px solid #ddd !important;
        break-inside: avoid;
      }
    }

    /* High contrast mode */
    @media (prefers-contrast: high) {
      .address-card {
        border: 2px solid #000;
      }

      .action-button {
        border: 2px solid currentColor;
      }

      .modal-overlay {
        background: rgba(0, 0, 0, 0.8);
      }
    }

    /* Reduced motion */
    @media (prefers-reduced-motion: reduce) {
      * {
        animation-duration: 0.01ms !important;
        animation-iteration-count: 1 !important;
        transition-duration: 0.01ms !important;
      }

      .animate-fade-in,
      .animate-slide-up,
      .animate-bounce-in {
        opacity: 1 !important;
        transform: none !important;
      }

      .address-card:hover {
        transform: none !important;
      }
    }

    /* Focus improvements for accessibility */
    @media (max-width: 768px) {
      .action-button:focus,
      input:focus,
      select:focus,
      button:focus {
        outline: 2px solid #8a2be2;
        outline-offset: 2px;
      }

      /* Ensure touch targets are large enough */
      .action-button,
      input,
      select,
      button {
        min-height: 44px;
      }

      /* Better spacing for form elements on mobile */
      .modal-content label {
        margin-bottom: 0.5rem;
        font-size: 0.9rem;
      }
    }
  </style>
</head>

<body class="font-inter bg-gray-50 text-gray-900 min-h-screen">
  <%- include("../partials/user/header") %>

  <div class="profile-container">
    <!-- Enhanced Breadcrumb -->
    <nav class="breadcrumb animate-fade-in" style="animation-delay: 0.1s">
      <a href="/" class="breadcrumb-link">
        <i class="fas fa-home"></i>
        <span>Home</span>
      </a>
      <span class="breadcrumb-separator">
        <i class="fas fa-chevron-right"></i>
      </span>
      <a href="/profile" class="breadcrumb-link">
        <span>Profile</span>
      </a>
      <span class="breadcrumb-separator">
        <i class="fas fa-chevron-right"></i>
      </span>
      <span class="breadcrumb-current">Addresses</span>
    </nav>

    <div class="profile-layout">
      <%- include("../partials/user/sidebar", { currentPage: 'addresses' }) %>

      <div class="profile-content">
        <div class="address-content">
          <!-- Enhanced Page Header -->
          <div class="content-header animate-fade-in" style="animation-delay: 0.2s">
            <div>
              <h1 class="text-3xl font-bold text-gray-900 mb-2">
                <i class="fas fa-map-marked-alt text-primary-500 mr-3"></i>
                Manage Addresses
              </h1>
            </div>
            <button id="addAddressBtn" class="action-button action-button-primary"
              onclick="openAddressModal('add')">
              <i class="fas fa-plus"></i>
              <span>Add New Address</span>
            </button>
          </div>

          <!-- Enhanced Address Grid -->
          <div class="addresses-grid">
            <% if (typeof addresses !=='undefined' && addresses.address.length> 0) { %>
              <% addresses.address.forEach((address, index)=> { %>

                <div class="address-card <%= address.isDefault ? 'default-address' : '' %> animate-slide-up"
                  style="animation-delay: <%= 0.3 + (index * 0.1) %>s">

                  <!-- Address Type Icon -->
                  <div class="flex items-start justify-between mb-4">
                    <div class="address-type-icon <%= 
                      address.addressTitle.toLowerCase().includes('home') ? 'address-type-home' : 
                      address.addressTitle.toLowerCase().includes('office') || address.addressTitle.toLowerCase().includes('work') ? 'address-type-office' : 
                      'address-type-other' 
                    %>">
                      <i class="fas <%= 
                        address.addressTitle.toLowerCase().includes('home') ? 'fa-home' : 
                        address.addressTitle.toLowerCase().includes('office') || address.addressTitle.toLowerCase().includes('work') ? 'fa-building' : 
                        'fa-map-marker-alt' 
                      %>"></i>
                    </div>

                    <!-- Action Menu -->
                    <div class="relative">
                      <button
                        class="text-gray-400 hover:text-primary-500 transition-colors p-2 rounded-full hover:bg-gray-100"
                        onclick="toggleAddressMenu('<%= address._id %>')">
                        <i class="fas fa-ellipsis-v"></i>
                      </button>
                      <div id="addressMenu-<%= address._id %>"
                        class="absolute right-0 mt-2 w-48 bg-white rounded-xl shadow-lg border border-gray-200 py-2 z-10 hidden">
                        <button
                          class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 flex items-center space-x-3"
                          onclick="openAddressModal('edit', '<%= address._id %>')">
                          <i class="fas fa-edit text-blue-500"></i>
                          <span>Edit Address</span>
                        </button>
                        <% if (!address.isDefault) { %>
                          <button
                            class="w-full text-left px-4 py-2 text-sm text-gray-700 hover:bg-gray-50 flex items-center space-x-3"
                            onclick="setDefaultAddress('<%= address._id %>')">
                            <i class="fas fa-star text-yellow-500"></i>
                            <span>Set as Default</span>
                          </button>
                        <% } %>
                        <button
                          class="w-full text-left px-4 py-2 text-sm text-red-600 hover:bg-red-50 flex items-center space-x-3"
                          onclick="confirmDeleteAddress('<%= address._id %>')">
                          <i class="fas fa-trash-alt text-red-500"></i>
                          <span>Delete</span>
                        </button>
                      </div>
                    </div>
                  </div>

                  <!-- Address Title and Badges -->
                  <div class="mb-4">
                    <h3 class="text-xl font-bold text-gray-900 mb-2">
                      <%= address.addressTitle %>
                    </h3>
                    <div class="flex gap-2">
                      <% if (address.isDefault) { %>
                        <span class="default-badge">
                          <i class="fas fa-star"></i>
                          Default
                        </span>
                      <% } %>
                      <% if (address.isBilling) { %>
                        <span class="billing-badge">
                          <i class="fas fa-credit-card"></i>
                          Billing
                        </span>
                      <% } %>
                    </div>
                  </div>

                  <!-- Address Details -->
                  <div class="space-y-1 mb-6">
                    <% if (address.name) { %>
                      <div class="address-info-item">
                        <div class="address-info-icon">
                          <i class="fas fa-user"></i>
                        </div>
                        <span class="font-semibold text-gray-900">
                          <%= address.name %>
                        </span>
                      </div>
                    <% } %>

                    <div class="address-info-item">
                      <div class="address-info-icon">
                        <i class="fas fa-map-marker-alt"></i>
                      </div>
                      <span class="text-gray-700">
                        <%= address.address %>
                      </span>
                    </div>

                    <% if (address.landMark) { %>
                      <div class="address-info-item">
                        <div class="address-info-icon">
                          <i class="fas fa-landmark"></i>
                        </div>
                        <span class="text-gray-600">
                          <%= address.landMark %>
                        </span>
                      </div>
                    <% } %>

                    <div class="address-info-item">
                      <div class="address-info-icon">
                        <i class="fas fa-city"></i>
                      </div>
                      <span class="text-gray-700">
                        <%= address.city %>, <%= address.state %>
                        <%= address.pinCode %>
                      </span>
                    </div>

                    <div class="address-info-item">
                      <div class="address-info-icon">
                        <i class="fas fa-globe"></i>
                      </div>
                      <span class="text-gray-700">
                        <%= address.country %>
                      </span>
                    </div>

                    <% if (address.phone) { %>
                      <div class="address-info-item">
                        <div class="address-info-icon">
                          <i class="fas fa-phone"></i>
                        </div>
                        <span class="text-gray-700">
                          <%= address.phone %>
                        </span>
                      </div>
                    <% } %>
                  </div>

                  <!-- Quick Actions -->
                  <div class="flex gap-2">
                    <button class="action-button action-button-outline flex-1"
                      onclick="openAddressModal('edit', '<%= address._id %>')">
                      <i class="fas fa-edit"></i>
                      <span>Edit</span>
                    </button>
                    <button class="action-button action-button-danger"
                      onclick="confirmDeleteAddress('<%= address._id %>')">
                      <i class="fas fa-trash-alt"></i>
                    </button>
                  </div>
                </div>

              <% }); %>
            <% } else { %>
              <!-- Enhanced Empty State -->
              <div class="empty-state animate-bounce-in col-span-full" style="animation-delay: 0.3s">
                <div class="empty-state-icon">
                  <i class="fas fa-map-marked-alt"></i>
                </div>
                <h3 class="text-2xl font-bold text-gray-900 mb-2">No Addresses Found</h3>
                <p class="text-gray-600 mb-6 max-w-md mx-auto">
                  You haven't added any addresses yet. Add your first address to make checkout faster and
                  easier.
                </p>
                <button class="action-button action-button-primary text-lg px-8 py-3"
                  onclick="openAddressModal('add')">
                  <i class="fas fa-plus"></i>
                  <span>Add Your First Address</span>
                </button>
              </div>
            <% } %>
          </div>
        </div>
      </div>
    </div>
  </div>

  <!-- Enhanced Address Modal -->
  <div id="addressModal" class="modal-overlay">
    <div class="modal-content">
      <div class="p-6 border-b border-gray-200">
        <div class="flex items-center justify-between">
          <div class="flex items-center space-x-3">
            <div class="w-10 h-10 bg-primary-100 rounded-full flex items-center justify-center">
              <i class="fas fa-map-marker-alt text-primary-600"></i>
            </div>
            <h3 class="text-xl font-bold text-gray-900" id="modalTitle">Add New Address</h3>
          </div>
          <button onclick="closeAddressModal()" class="text-gray-400 hover:text-gray-600 transition-colors">
            <i class="fas fa-times text-xl"></i>
          </button>
        </div>
      </div>

      <form id="addressForm" class="p-6">
        <input type="hidden" id="addressId" name="addressId" value="">

        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
          <div class="md:col-span-2">
            <label for="addressTitle" class="block text-sm font-semibold text-gray-700 mb-2">
              <i class="fas fa-tag text-primary-500 mr-2"></i>
              Address Title
            </label>
            <input type="text" id="addressTitle" name="addressTitle" placeholder="e.g., Home, Office, Parent's House"
              required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
          </div>

          <div class="md:col-span-2">
            <label for="address" class="block text-sm font-semibold text-gray-700 mb-2">
              <i class="fas fa-map-marker-alt text-primary-500 mr-2"></i>
              Street Address
            </label>
            <input type="text" id="address" name="address" required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
          </div>

          <div class="md:col-span-2">
            <label for="landMark" class="block text-sm font-semibold text-gray-700 mb-2">
              <i class="fas fa-landmark text-primary-500 mr-2"></i>
              Landmark (Optional)
            </label>
            <input type="text" id="landMark" name="landMark"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
          </div>

          <div>
            <label for="city" class="block text-sm font-semibold text-gray-700 mb-2">
              <i class="fas fa-city text-primary-500 mr-2"></i>
              City
            </label>
            <input type="text" id="city" name="city" required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
          </div>

          <div>
            <label for="state" class="block text-sm font-semibold text-gray-700 mb-2">
              <i class="fas fa-map text-primary-500 mr-2"></i>
              State/Province
            </label>
            <input type="text" id="state" name="state" required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
          </div>

          <div>
            <label for="pinCode" class="block text-sm font-semibold text-gray-700 mb-2">
              <i class="fas fa-mail-bulk text-primary-500 mr-2"></i>
              ZIP/Postal Code
            </label>
            <input type="number" id="pinCode" name="pinCode" required min="100000" max="999999" required
              oninput="this.value = this.value.replace(/[^0-9]/g, '').slice(0, 6)"
              onkeydown="if(['e','E','+','-'].includes(event.key)) event.preventDefault();"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
          </div>

          <div>
            <label for="country" class="block text-sm font-semibold text-gray-700 mb-2">
              <i class="fas fa-globe text-primary-500 mr-2"></i>
              Country
            </label>
            <select id="country" name="country" required
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
              <option value="IN">India</option>
            </select>
          </div>

          <div class="md:col-span-2">
            <label for="phone" class="block text-sm font-semibold text-gray-700 mb-2">
              <i class="fas fa-phone text-primary-500 mr-2"></i>
              Phone Number
            </label>
            <input type="tel" id="phone" name="phone" pattern="[0-9]{10}" maxlength="10" min="0" inputmode="numeric"
              oninput="this.value = this.value.replace(/[^0-9]/g, '')"
              class="w-full px-4 py-3 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
          </div>

          <div class="md:col-span-2 space-y-4">
            <label class="flex items-center space-x-3 cursor-pointer">
              <input type="checkbox" id="isDefault" name="isDefault"
                class="w-5 h-5 text-primary-600 border-gray-300 rounded focus:ring-primary-500">
              <span class="text-sm font-medium text-gray-700">
                <i class="fas fa-star text-yellow-500 mr-2"></i>
                Set as default address
              </span>
            </label>

            <label class="flex items-center space-x-3 cursor-pointer">
              <input type="checkbox" id="isBilling" name="isBilling"
                class="w-5 h-5 text-primary-600 border-gray-300 rounded focus:ring-primary-500">
              <span class="text-sm font-medium text-gray-700">
                <i class="fas fa-credit-card text-blue-500 mr-2"></i>
                Use as billing address
              </span>
            </label>
          </div>
        </div>

        <div class="flex justify-end space-x-3 mt-8 pt-6 border-t border-gray-200">
          <button type="button" onclick="closeAddressModal()" class="action-button action-button-outline">
            Cancel
          </button>
          <button type="submit" class="action-button action-button-primary">
            <i class="fas fa-save"></i>
            <span id="submitBtnText">Save Address</span>
            <div class="hidden" id="submitSpinner">
              <i class="fas fa-spinner fa-spin"></i>
            </div>
          </button>
        </div>
      </form>
    </div>
  </div>

  <!-- Enhanced Delete Modal -->
  <div id="deleteModal" class="modal-overlay">
    <div class="modal-content max-w-md">
      <div class="p-6 text-center">
        <div class="w-16 h-16 bg-red-100 rounded-full flex items-center justify-center mx-auto mb-4">
          <i class="fas fa-exclamation-triangle text-2xl text-red-500"></i>
        </div>
        <h3 class="text-lg font-bold text-gray-900 mb-2">Delete Address</h3>
        <p class="text-gray-600 mb-6">Are you sure you want to delete this address? This action cannot be undone.</p>

        <div class="flex justify-center space-x-3">
          <button type="button" onclick="closeDeleteModal()" class="action-button action-button-outline">
            Cancel
          </button>
          <button type="button" id="confirmDeleteBtn" class="action-button action-button-danger">
            <i class="fas fa-trash-alt"></i>
            Delete
          </button>
        </div>
      </div>
    </div>
  </div>

  <!-- Enhanced Toast -->
  <div id="toast" class="fixed top-4 right-4 z-50 transform translate-x-full transition-transform duration-300">
    <div class="bg-white rounded-lg shadow-lg border border-gray-200 p-4 flex items-center space-x-3 min-w-80">
      <i id="toastIcon" class="fas fa-check-circle text-green-500 text-xl"></i>
      <div>
        <p id="toastTitle" class="font-semibold text-gray-900">Success!</p>
        <p id="toastMessage" class="text-sm text-gray-600">Address saved successfully.</p>
      </div>
    </div>
  </div>

  <script>
    const allAddresses = <%- JSON.stringify(addresses.address) %>;
  </script>

  <script>
    // Loading screen
    window.addEventListener('load', function () {
      const loadingScreen = document.getElementById('loadingScreen');
      if (loadingScreen) {
        loadingScreen.style.opacity = '0';
        setTimeout(() => {
          loadingScreen.style.display = 'none';
        }, 500);
      }
    });

    // Enhanced JavaScript with better functionality
    let currentAddressId = null;
    let modalMode = 'add';

    function openAddressModal(mode, addressId = null) {
      const modal = document.getElementById('addressModal');
      const modalTitle = document.getElementById('modalTitle');
      const submitBtnText = document.getElementById('submitBtnText');
      const form = document.getElementById('addressForm');

      modalMode = mode;
      currentAddressId = addressId;
      form.reset();

      if (mode === 'edit' && addressId) {
        modalTitle.innerHTML = '<i class="fas fa-edit text-blue-500 mr-2"></i>Edit Address';
        submitBtnText.textContent = 'Update Address';

        // ✅ Find address data from global JSON array
        const address = allAddresses.find(addr => addr._id === addressId);
        if (address) {
          document.getElementById('addressId').value = addressId;
          document.getElementById('addressTitle').value = address.addressTitle || '';
          document.getElementById('address').value = address.address || '';
          document.getElementById('landMark').value = address.landMark || '';
          document.getElementById('city').value = address.city || '';
          document.getElementById('state').value = address.state || '';
          document.getElementById('pinCode').value = address.pinCode || '';
          document.getElementById('country').value = address.country || '';
          document.getElementById('phone').value = address.phone || '';
          document.getElementById('isDefault').checked = !!address.isDefault;
          document.getElementById('isBilling').checked = !!address.isBilling;
        }
      } else {
        modalTitle.innerHTML = '<i class="fas fa-plus text-green-500 mr-2"></i>Add New Address';
        submitBtnText.textContent = 'Save Address';
        document.getElementById('addressId').value = '';
      }

      modal.classList.add('active');
      document.body.style.overflow = 'hidden';
    }

    function closeAddressModal() {
      const modal = document.getElementById('addressModal');
      modal.classList.remove('active');
      document.body.style.overflow = 'auto';
    }

    function confirmDeleteAddress(addressId) {
      const modal = document.getElementById('deleteModal');
      const confirmBtn = document.getElementById('confirmDeleteBtn');

      confirmBtn.onclick = () => deleteAddress(addressId);
      modal.classList.add('active');
      document.body.style.overflow = 'hidden';
    }

    function closeDeleteModal() {
      const modal = document.getElementById('deleteModal');
      modal.classList.remove('active');
      document.body.style.overflow = 'auto';
    }

    function toggleAddressMenu(addressId) {
      const menu = document.getElementById(`addressMenu-${addressId}`);

      document.querySelectorAll('[id^="addressMenu-"]').forEach(m => {
        if (m.id !== `addressMenu-${addressId}`) {
          m.classList.add('hidden');
        }
      });

      menu.classList.toggle('hidden');
    }

    // Form submission
    document.getElementById("addressForm").addEventListener("submit", function (e) {
      e.preventDefault();

      const submitBtn = this.querySelector('button[type="submit"]');
      const submitBtnText = document.getElementById("submitBtnText");
      const submitSpinner = document.getElementById("submitSpinner");

      submitBtnText.classList.add("hidden");
      submitSpinner.classList.remove("hidden");
      submitBtn.disabled = true;

      const formData = getFormData(this);
      const isEdit = modalMode === "edit" && currentAddressId;

      const url = isEdit ? `/address/${currentAddressId}` : "/address";
      const method = isEdit ? "PATCH" : "POST";

      fetch(url, {
        method,
        headers: {
          "Content-Type": "application/json"
        },
        body: JSON.stringify(formData)
      })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            showToast("success", isEdit ? "Address Updated" : "Address Added", data.message);
            setTimeout(() => window.location.reload(), 1500);
          } else {
            showToast("error", "Error", data.message || "Something went wrong.");
          }
        })
        .catch(err => {
          console.error("Error:", err);
          showToast("error", "Error", "Failed to save address.");
        })
        .finally(() => {
          submitBtnText.classList.remove("hidden");
          submitSpinner.classList.add("hidden");
          submitBtn.disabled = false;
          closeAddressModal();
        });
    });

    function getFormData(form) {
      const formData = new FormData(form);
      const data = {};

      for (const [key, value] of formData.entries()) {
        data[key] = value;
      }

      data.isDefault = form.querySelector('#isDefault').checked;
      data.isBilling = form.querySelector('#isBilling').checked;

      return data;
    }

    function showToast(type, title, message) {
      const toast = document.getElementById('toast');
      const toastIcon = document.getElementById('toastIcon');
      const toastTitle = document.getElementById('toastTitle');
      const toastMessage = document.getElementById('toastMessage');

      if (type === 'success') {
        toastIcon.className = 'fas fa-check-circle text-green-500 text-xl';
      } else if (type === 'error') {
        toastIcon.className = 'fas fa-exclamation-circle text-red-500 text-xl';
      }

      toastTitle.textContent = title;
      toastMessage.textContent = message;

      toast.classList.remove('translate-x-full');

      setTimeout(() => {
        toast.classList.add('translate-x-full');
      }, 5000);
    }

    function deleteAddress(addressId) {
      const confirmBtn = document.getElementById('confirmDeleteBtn');

      confirmBtn.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i> Deleting...';
      confirmBtn.disabled = true;

      fetch(`/address/${addressId}`, {
        method: 'DELETE',
        headers: {
          'Content-Type': 'application/json'
        }
      })
        .then(res => res.json())
        .then(data => {
          if (data.success) {
            closeDeleteModal();
            showToast('success', 'Address Deleted', data.message || 'Your address has been deleted successfully.');
            setTimeout(() => {
              window.location.reload();
            }, 1500);
          } else {
            showToast('error', 'Error', data.message || 'Failed to delete the address.');
          }
        })
        .catch(err => {
          console.error('Delete Error:', err);
          showToast('error', 'Error', 'Something went wrong while deleting the address.');
        })
        .finally(() => {
          confirmBtn.innerHTML = 'Delete';
          confirmBtn.disabled = false;
        });
    }

    function setDefaultAddress(addressId) {
      showToast('success', 'Default Address Set', 'Your default address has been updated.');
    }

    // Close modals on escape key
    document.addEventListener('keydown', function (e) {
      if (e.key === 'Escape') {
        closeAddressModal();
        closeDeleteModal();
      }
    });

    // Close modals on outside click
    document.getElementById('addressModal').addEventListener('click', function (e) {
      if (e.target === this) closeAddressModal();
    });

    document.getElementById('deleteModal').addEventListener('click', function (e) {
      if (e.target === this) closeDeleteModal();
    });

    // Close address menus when clicking outside
    document.addEventListener('click', function (e) {
      if (!e.target.closest('.relative')) {
        document.querySelectorAll('[id^="addressMenu-"]').forEach(menu => {
          menu.classList.add('hidden');
        });
      }
    });
  </script>

  <%- include("../partials/user/footer") %>
</body>

</html>
